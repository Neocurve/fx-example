FUNCTION_BLOCK CM_PIDAINCV_400
TITLE =
{ S7_m_c := 'true'; S7_blockview := 'big'; S7_tasklist := 'OB100' }
AUTHOR : 
FAMILY : 
NAME : PIDAINCV
VERSION : 0.0


VAR_INPUT
  LIOP_SEL { S7_dynamic := 'true' }: BOOL ;	//1=A/M mode by link only; Default=0
  SAMPLE_T { S7_sampletime := 'true' }: REAL ;	//Sample time; Defined by OB during compiling
  i_bWireBreak { S7_dynamic := 'true'; S7_visible := 'false' }: BOOL ;	//1=Wire break from other block; Default=0
  i_bOverRun { S7_dynamic := 'true'; S7_visible := 'false' }: BOOL ;	//1=Short connect from other block; Default=0
  iMode { S7_dynamic := 'true' }: BOOL ;	//1=Signal from other block's float value; 0=Signal from AI channel; Default=0
  wVal { S7_dynamic := 'true' }: WORD ;	//AI channel signal; Default=0
  fVal { S7_dynamic := 'true' }: REAL ;	//FLoat value; Default=0
  fHR { S7_dynamic := 'true'; S7_m_c := 'true' }: REAL  := 1.000000e+002;	//Messurement high range; Default=100
  fLR { S7_dynamic := 'true'; S7_m_c := 'true' }: REAL ;	//Messurement high range; Default=0
  LIM_byEnable { S7_dynamic := 'true'; S7_visible := 'false' }: BYTE ;	//0No1AL2WL3ALWL4WH5ALWH6WLWH7ALWLWH8AH9ALAHaWLAHbALWLAHcWHAHdALWHAHeWLWHAHfALL
  LIM_bHysSet { S7_dynamic := 'true'; S7_visible := 'false' }: BOOL ;	//1=Absolut; 0=Percental; Default=0 
  LIM_fHys { S7_dynamic := 'true'; S7_visible := 'false' }: REAL ;	//Hysterese value for limits; Default=0
  LIM_fAH { S7_dynamic := 'true' }: REAL  := 1.000000e+002;	//High High limit value; Default=100
  AH_DT { S7_dynamic := 'true'; S7_visible := 'false' }: REAL ;	//High High limit delay time; Default=0
  LIM_fWH { S7_dynamic := 'true' }: REAL  := 1.000000e+002;	//High limit value; Default=100
  WH_DT { S7_dynamic := 'true'; S7_visible := 'false' }: REAL ;	//High limit delay time; Default=0
  LIM_fWL { S7_dynamic := 'true' }: REAL ;	//Low limit value; Default=0
  WL_DT { S7_dynamic := 'true'; S7_visible := 'false' }: REAL ;	//Low limit delay time; Default=0
  LIM_fAL { S7_dynamic := 'true' }: REAL ;	//Low Low limit value; Default=0
  AL_DT { S7_dynamic := 'true'; S7_visible := 'false' }: REAL ;	//Low Low limit delay time; Default=0
  c_fTc { S7_dynamic := 'true' }: REAL ;	//Filter time constance; Default=0 
  c_bValKEEP { S7_dynamic := 'true'; S7_visible := 'false' }: BOOL  := TRUE;	//1=Keep the last value when loop error; Default=1
  c_fValErr { S7_dynamic := 'true'; S7_visible := 'false' }: REAL ;	//Value when loop error; Default=0 
  i_bLockOP { S7_dynamic := 'true' }: BOOL ;	//1=OP is interlocked to c_fOPILErr; Default=0
  c_fOPILErr { S7_dynamic := 'true' }: REAL ;	//OP value when i_bLockOP=1; Default=0 
  i_bLockOFF { S7_dynamic := 'true' }: BOOL ;	//1=PID is interlocked to operator control with OP=c_fOPILOff; Default=0
  c_fOPILOff { S7_dynamic := 'true' }: REAL ;	//OP value when i_bLockOFF=1; Default=0 
  c_bSPTrack { S7_dynamic := 'true' }: BOOL ;	//1= SP track in operator control; Default=0
  c_fOPHR { S7_dynamic := 'true'; S7_m_c := 'true' }: REAL  := 1.000000e+002;	//High range of OP; Default=0
  c_fOPLR { S7_dynamic := 'true'; S7_m_c := 'true' }: REAL ;	//Low range of OP; Default=0
  c_fOPHL { S7_dynamic := 'true'; S7_m_c := 'true' }: REAL  := 1.000000e+002;	//High limit of OP; Default=0
  c_fOPLL { S7_dynamic := 'true'; S7_m_c := 'true' }: REAL ;	//Low limit of OP; ; Default=0
  c_bOPTrack { S7_dynamic := 'true' }: BOOL ;	//1=OP track in operator control; Default=0
  i_fOPTrackV { S7_dynamic := 'true' }: REAL ;	//OP track value; Default=0
  c_bDirRev { S7_dynamic := 'true'; S7_link := 'false' }: BOOL ;	//1=Reverse Action; 0=Direct Action; Default=0 
  c_bPSel { S7_dynamic := 'true'; S7_visible := 'false' }: BOOL  := TRUE;	//1=Proportional action enable; Default=1
  c_bISel { S7_dynamic := 'true'; S7_visible := 'false' }: BOOL  := TRUE;	//1=Integral action enable; Default=1
  c_bDSel { S7_dynamic := 'true'; S7_visible := 'false' }: BOOL ;	//1=Derivate action enable; Default=0
  c_fKc { S7_dynamic := 'true'; S7_m_c := 'true' }: REAL  := 1.000000e+000;	//Proportional gain; Default=1
  c_fTi { S7_dynamic := 'true'; S7_m_c := 'true' }: REAL  := 1.000000e+001;	//Integral time; Default=10s
  c_fTd { S7_dynamic := 'true'; S7_visible := 'false'; S7_m_c := 'true' }: REAL ;	//Derivate Time; Default=10s
  c_fTdLAG { S7_dynamic := 'true'; S7_visible := 'false' }: TIME  := T#2S;	//Time Lag of D-Part; Default=2s
  c_fDeadBW { S7_dynamic := 'true' }: REAL ;	//Dead band width; Default=0
  i_fDISV { S7_dynamic := 'true' }: REAL ;	//Disturbance value; Default=0
  c_bIHOLD { S7_dynamic := 'true' }: BOOL ;	//1=Integral action hold; Default=0
  c_iIInital { S7_dynamic := 'true'; S7_visible := 'false' }: BOOL ;	//1=Initialization of tntegral; Default=0
  i_fPCmdSP { S7_dynamic := 'true' }: REAL ;	//SP in Auto mode; Default=0
  i_fPCmdMANOP { S7_dynamic := 'true' }: REAL ;	//Operator OP in Auto mode; Default=0
  c_bNONC { S7_dynamic := 'true' }: BOOL ;	//1=Normal open valve; 0=Normal close valve; Default=0
  c_bMON { S7_dynamic := 'true' }: BOOL  := TRUE;	//1=Enable feedback error monitoring; Default=0
  c_fMONT { S7_dynamic := 'true' }: REAL  := 1.000000e+001;	//Feedback error monitoring time; Default=10s
  c_fMONPosR { S7_dynamic := 'true' }: REAL  := 1.000000e+001;	//Position monitoring range; Default=10
  c_bHasFBPos { S7_dynamic := 'true' }: BOOL ;	//1=Has position feedback; 0=No position feedback; Default=0
  c_bFBPosW { S7_dynamic := 'true' }: BOOL  := TRUE;	//1=Position from AI channel; 0=Position from other block; Default=1 
  i_wFBPos { S7_dynamic := 'true' }: WORD ;	//Position feedback from AI channel; Default=0
  i_fFBPos { S7_dynamic := 'true' }: REAL ;	//Position feedback from other block; Default=0
  MSG1_EVID { S7_visible := 'false'; S7_link := 'false'; S7_param := 'false'; S7_server := 'alarm_archiv'; S7_a_type := 'alarm_8p' }: DWORD ;	
END_VAR
VAR_OUTPUT
  QdwState { S7_dynamic := 'true'; S7_m_c := 'true'; S7_visible := 'false' }: DWORD ;	//Anolog input status for icon and faceplate; Default=0
  QwLimState { S7_dynamic := 'true'; S7_m_c := 'true'; S7_visible := 'false' }: WORD ;	//Limit status for faceplate; Default=0
  QfVal { S7_dynamic := 'true'; S7_m_c := 'true'; S7_archive := 'shortterm'; S7_unit := 'unit' }: REAL ;	//Measuring value; Default=0
  QfHR { S7_dynamic := 'true' }: REAL  := 1.000000e+002;	//Messurement high range; Default=100
  QfLR { S7_dynamic := 'true' }: REAL ;	//Messurement Low range; Default=0
  LIM_QfHys { S7_dynamic := 'true' }: REAL ;	//Hysterese value for limits; Default=0
  QWARN { S7_dynamic := 'true' }: BOOL ;	//1=Low or High limit warning active; Default=0
  QALARM { S7_dynamic := 'true' }: BOOL ;	//1=Low Low or High High limit alarming active; Default=0  
  QERR_AIN { S7_dynamic := 'true' }: BOOL ;	//1=Anolog input wire break or short circuit; Default=0
  QERR_BREAK_AIN { S7_dynamic := 'true' }: BOOL ;	//1=Anolog input wire break; Default=0
  QERR_CIRCUIT_AIN { S7_dynamic := 'true' }: BOOL ;	//1=Anolog input short circuit; Default=0
  QERR_LR_AIN { S7_dynamic := 'true' }: BOOL ;	//1=Value < low range; Default=0
  QERR_HR_AIN { S7_dynamic := 'true' }: BOOL ;	//1=Value > high range; Default=0
  LIM_QfAH { S7_dynamic := 'true' }: REAL  := 1.000000e+002;	//High High limit value; Default=100
  LIM_QfWH { S7_dynamic := 'true' }: REAL  := 1.000000e+002;	//High limit value; Default=100
  LIM_QfWL { S7_dynamic := 'true' }: REAL ;	//Low limit value; Default=0
  LIM_QfAL { S7_dynamic := 'true' }: REAL ;	//Low limit value; Default=0
  LIM_QbAH { S7_dynamic := 'true' }: BOOL ;	//1=High High limit alarming active; Default=0
  QAH_T { S7_dynamic := 'true'; S7_visible := 'false' }: REAL ;	//Current High High alarming monitoring time; Default=0
  LIM_QbWH { S7_dynamic := 'true' }: BOOL ;	//1=High limit warning active; Default=0
  QWH_T { S7_dynamic := 'true'; S7_visible := 'false' }: REAL ;	//Current High warning monitoring time; Default=0
  LIM_QbWL { S7_dynamic := 'true' }: BOOL ;	//1=Low limit warning active; Default=0 
  QWL_T { S7_dynamic := 'true'; S7_visible := 'false' }: REAL ;	//Current Low warning monitoring time; Default=0 
  LIM_QbAL { S7_dynamic := 'true' }: BOOL ;	//1=Low Low limit alarming active; Default=0
  QAL_T { S7_dynamic := 'true'; S7_visible := 'false' }: REAL ;	//Current Low Low alarming monitoring time; Default=0
  q_iALM_PV { S7_dynamic := 'true'; S7_m_c := 'true'; S7_visible := 'false' }: INT ;	//Alarm Index of PV for WinCC icon display; Default=0
  q_iALM_CV { S7_dynamic := 'true'; S7_m_c := 'true'; S7_visible := 'false' }: INT ;	//Alarm Index of CV for WinCC icon display; Default=0
  q_iALM_PID { S7_dynamic := 'true'; S7_m_c := 'true'; S7_visible := 'false' }: INT ;	//Alarm Index of CV for WinCC icon display; Default=0
  SP { S7_dynamic := 'true'; S7_m_c := 'true'; S7_archive := 'shortterm'; S7_unit := 'unit' }: REAL ;	//Actual Setting point; Default=0
  QMAN_AUT { S7_dynamic := 'true'; S7_m_c := 'true'; S7_archive := 'shortterm' }: BOOL ;	//1=Auto mode; 0=Manual mode; Default=0
  Q_bPIDOPE { S7_dynamic := 'true'; S7_m_c := 'true'; S7_archive := 'shortterm' }: BOOL ;	//1= PID control; 0=Operator control; Default=0 
  Q_bLockOP { S7_dynamic := 'true' }: BOOL ;	//1=Interlock error active; Default=0
  Q_bLockOFF { S7_dynamic := 'true' }: BOOL ;	//1=Interlock error active; Default=0
  Q_fOP { S7_dynamic := 'true'; S7_m_c := 'true'; S7_archive := 'shortterm'; S7_unit := 'unit' }: REAL ;	//OP value to other block; Default=0
  Q_wOP { S7_dynamic := 'true' }: WORD ;	//OP value to AO channel; Default=0
  Q_bIHOLD { S7_dynamic := 'true' }: BOOL ;	//1=Integral action hold; Default=0
  QMON { S7_dynamic := 'true' }: BOOL ;	//1=Valve feedback monitoring enable; Default=0
  QMON_ERR { S7_dynamic := 'true' }: BOOL ;	//1=Valve feedback error; Default=0
  QMON_T { S7_dynamic := 'true' }: REAL ;	//Current motor feedback monitoring time; Default=0
  q_fFBPos { S7_dynamic := 'true'; S7_m_c := 'true' }: REAL ;	//Valve position feedback; Link to program or WinCC; Default=0
  q_bFBPosERR { S7_dynamic := 'true' }: BOOL ;	//1=Valve position feeedback signal loop error; Default=0
  q_bOPEN { S7_dynamic := 'true' }: BOOL ;	//1=Valve open; 0=Valve closed; Default=0
  MSG1_bDone { S7_visible := 'false' }: BOOL ;	//A8P
  MSG1_bError { S7_visible := 'false' }: BOOL ;	//A8P
  MSG1_wState { S7_visible := 'false' }: WORD ;	//A8P
  MSG1_wAck { S7_visible := 'false' }: WORD ;	//A8P
END_VAR
VAR_IN_OUT
  OP_dwCmd { S7_dynamic := 'true'; S7_m_c := 'true'; S7_visible := 'false' }: DWORD ;	//Control command from faceplate; Default=0
  i_bPCmdAUT { S7_dynamic := 'true' }: BOOL ;	//1=Switch to AUTO mode; Default=0
  i_bPCmdMAN { S7_dynamic := 'true' }: BOOL ;	//1=Switch to MAN mode; Default=0
  i_bPCmdPID { S7_dynamic := 'true' }: BOOL ;	//1=Switch to PID control; Default=0
  i_bPCmdOPE { S7_dynamic := 'true' }: BOOL ;	//1=Switch to Operator control; Default=0
  i_bRESET { S7_dynamic := 'true' }: BOOL ;	//1=Reset error; Default=0
  i_fOCmdSP { S7_dynamic := 'true'; S7_m_c := 'true'; S7_visible := 'false'; S7_unit := 'unit' }: REAL ;	//SP in MAN mode; Default=0
  i_fOCmdMANOP { S7_dynamic := 'true'; S7_m_c := 'true'; S7_visible := 'false'; S7_unit := 'unit' }: REAL ;	//Operator OP in MAN mode; Default=0
END_VAR
VAR
  QdwStatePLC : DWORD ;	//State word in PLC format
  QwLimStatePLC : WORD ;	//Limit State word in PLC format
  LIM_byActive : BYTE ;	//set limit alarms (1=active)
  QfValTmp : REAL ;	
  IntCONT_C : FB 1;	
  OPdwCmdHMI : DWORD ;	//Operator Commands HMI
  OPdwCmdPLC : DWORD ;	//Operator Commands PLC
  OP_RESET : BOOL ;	
  A8P : SFB 35;	
  STRUCT_TS : STRUCT 	
   wFormat : WORD ;	//time format
   aDT : ARRAY  [1 .. 8 ] OF //array date and time
   DATE_AND_TIME ;	//array date and time
  END_STRUCT ;	
END_VAR
VAR_TEMP
  t_bOCmdSPlock : BOOL ;	
  t_bOCmdOPlock : BOOL ;	
  t_fPV : REAL ;	//for IntCONT_C.PV_IN   
  t_fSP : REAL ;	//for IntCONT_C.SP_INT   
  t_fKc : REAL ;	//Proportional gain; Default=1
  t_fTi : TIME ;	//Integral time; Default=10s
  t_fTd : TIME ;	//Derivate Time; Default=10s
  TOP_SI : STRUCT 	
   EV_CLASS : BYTE ;	
   EV_NUM : BYTE ;	
   PRIORITY : BYTE ;	
   NUM : BYTE ;	
   TYP2_3 : BYTE ;	
   TYP1 : BYTE ;	
   ZI1 : WORD ;	
   ZI2_3 : DWORD ;	
  END_STRUCT ;	
  START_UP_SI : STRUCT 	
   EV_CLASS : BYTE ;	
   EV_NUM : BYTE ;	
   PRIORITY : BYTE ;	
   NUM : BYTE ;	
   TYP2_3 : BYTE ;	
   TYP1 : BYTE ;	
   ZI1 : WORD ;	
   ZI2_3 : DWORD ;	
  END_STRUCT ;	
  iRet : INT ;	
END_VAR
BEGIN
NETWORK
TITLE =SCL network
//compiled by SCL compiler version:  SCLCOMP K05.03.07.00_01.02.00.01 release
      SET   ; 
      SAVE  ; 
      =     L     48.1; 
      L     W#16#0; 
      T     LW    50; 
      L     DW#16#870000B0; 
      T     LD    52; 
      L     W#16#0; 
      T     LW    56; 
      L     DW#16#87000110; 
      T     LD    58; 
      TAR2  LD    62; 
      CALL    SFC    6( 
            RET_VAL:= iRet,
            TOP_SI:= #TOP_SI,
            START_UP_SI:= #START_UP_SI);
      LAR2  LD    62;
      L     #iRet; 
      L     #TOP_SI.NUM; 
      L     B#16#64; 
      ==I   ; 
      JCN   A7d0; 
      CLR   ; 
      =     #Q_bPIDOPE; 
      L     DW#16#0; 
      T     #QdwState; 
      A     #c_bNONC; 
      NOT   ; 
      JCN   A7d1; 
      L     0.000000e+000; 
      T     #i_fPCmdMANOP; 
      T     #i_fOCmdMANOP; 
      JU    A7d2; 
A7d1: L     1.000000e+002; 
      T     #i_fPCmdMANOP; 
      T     #i_fOCmdMANOP; 
A7d2: CLR   ; 
      =     #i_bRESET; 
      L     0; 
      T     #iRet; 
A7d0: L     #OP_dwCmd; 
      T     #OPdwCmdHMI; 
      L     DIB [AR2,P#417.0]; 
      T     DIB [AR2,P#418.0]; 
      L     DIB [AR2,P#416.0]; 
      T     DIB [AR2,P#419.0]; 
      L     DIB [AR2,P#415.0]; 
      T     DIB [AR2,P#420.0]; 
      L     DIB [AR2,P#414.0]; 
      T     DIB [AR2,P#421.0]; 
      CLR   ; 
      A     #LIOP_SEL; 
      NOT   ; 
      A     DIX [AR2,P#420.2]; 
      O     #i_bPCmdMAN; 
      JCN   A7d3; 
      CLR   ; 
      =     #QMAN_AUT; 
      JU    A7d5; 
A7d3: CLR   ; 
      A     #LIOP_SEL; 
      NOT   ; 
      A     DIX [AR2,P#420.3]; 
      O     #i_bPCmdAUT; 
      JCN   A7d5; 
      SET   ; 
      =     #QMAN_AUT; 
A7d5: CLR   ; 
      =     #i_bPCmdMAN; 
      =     #i_bPCmdAUT; 
      A     #i_bRESET; 
      O     DIX [AR2,P#421.0]; 
      JCN   A7d6; 
      SET   ; 
      =     #OP_RESET; 
      JU    A7d7; 
A7d6: CLR   ; 
      =     #OP_RESET; 
A7d7: CLR   ; 
      =     #i_bRESET; 
      A     #i_bPCmdOPE; 
      A     #QMAN_AUT; 
      =     L     48.2; 
      A     #QMAN_AUT; 
      NOT   ; 
      A     DIX [AR2,P#420.0]; 
      O     L     48.2; 
      JCN   A7d8; 
      CLR   ; 
      =     #Q_bPIDOPE; 
      JU    A7da; 
A7d8: CLR   ; 
      A     #i_bPCmdPID; 
      A     #QMAN_AUT; 
      =     L     48.2; 
      A     #QMAN_AUT; 
      NOT   ; 
      A     DIX [AR2,P#420.1]; 
      O     L     48.2; 
      =     L     48.2; 
      A     #Q_bLockOFF; 
      NOT   ; 
      A     L     48.2; 
      JCN   A7da; 
      SET   ; 
      =     #Q_bPIDOPE; 
A7da: CLR   ; 
      A     DIX [AR2,P#419.0]; 
      JCN   A7db; 
      SET   ; 
      =     #c_bMON; 
      JU    A7dd; 
A7db: CLR   ; 
      A     DIX [AR2,P#419.1]; 
      JCN   A7dd; 
      CLR   ; 
      =     #c_bMON; 
A7dd: CLR   ; 
      A     #c_bMON; 
      =     #QMON; 
      A     DIX [AR2,P#418.0]; 
      JCN   A7de; 
      A     #c_bPSel; 
      NOT   ; 
      =     #c_bPSel; 
A7de: CLR   ; 
      A     DIX [AR2,P#418.1]; 
      JCN   A7df; 
      A     #c_bISel; 
      NOT   ; 
      =     #c_bISel; 
A7df: CLR   ; 
      A     DIX [AR2,P#418.2]; 
      JCN   A7e0; 
      A     #c_bDSel; 
      NOT   ; 
      =     #c_bDSel; 
A7e0: CLR   ; 
      A     DIX [AR2,P#420.4]; 
      JCN   A7e1; 
      A     #c_bOPTrack; 
      NOT   ; 
      =     #c_bOPTrack; 
A7e1: CLR   ; 
      A     DIX [AR2,P#420.5]; 
      JCN   A7e2; 
      A     #c_bSPTrack; 
      NOT   ; 
      =     #c_bSPTrack; 
A7e2: CLR   ; 
      A     DIX [AR2,P#420.6]; 
      JCN   A7e3; 
      A     #c_bDirRev; 
      NOT   ; 
      =     #c_bDirRev; 
A7e3: CLR   ; 
      A     DIX [AR2,P#418.4]; 
      JCN   A7e4; 
      A     #c_iIInital; 
      NOT   ; 
      =     #c_iIInital; 
A7e4: CLR   ; 
      A     #iMode; 
      NOT   ; 
      JCN   A7e5; 
      L     #wVal; 
      L     0; 
      >=I   ; 
      L     #wVal; 
      L     27648; 
      =     L     48.2; 
      <=I   ; 
      A     L     48.2; 
      JCN   A7e6; 
      CLR   ; 
      =     #QERR_HR_AIN; 
      =     #QERR_LR_AIN; 
      =     #QERR_CIRCUIT_AIN; 
      =     #QERR_BREAK_AIN; 
      L     #wVal; 
      AD    DW#16#FFFF; 
      DTR   ; 
      L     2.764800e+004; 
      /R    ; 
      L     #fHR; 
      TAK   ; 
      T     LD    50; 
      TAK   ; 
      L     #fLR; 
      -R    ; 
      L     LD    50; 
      *R    ; 
      L     #fLR; 
      +R    ; 
      T     #QfValTmp; 
      JU    A7eb; 
A7e6: L     #wVal; 
      L     27648; 
      >I    ; 
      L     #wVal; 
      L     32511; 
      =     L     48.2; 
      <=I   ; 
      A     L     48.2; 
      JCN   A7e8; 
      SET   ; 
      =     #QERR_HR_AIN; 
      CLR   ; 
      =     #QERR_LR_AIN; 
      =     #QERR_CIRCUIT_AIN; 
      =     #QERR_BREAK_AIN; 
      L     #fHR; 
      T     #QfValTmp; 
      JU    A7eb; 
A7e8: L     #wVal; 
      L     32511; 
      >I    ; 
      L     #wVal; 
      L     32767; 
      =     L     48.2; 
      <=I   ; 
      A     L     48.2; 
      JCN   A7e9; 
      SET   ; 
      =     #QERR_CIRCUIT_AIN; 
      CLR   ; 
      =     #QERR_HR_AIN; 
      =     #QERR_LR_AIN; 
      =     #QERR_BREAK_AIN; 
      JU    A7eb; 
A7e9: L     #wVal; 
      L     0; 
      <I    ; 
      L     #wVal; 
      L     -4864; 
      =     L     48.2; 
      >I    ; 
      A     L     48.2; 
      JCN   A7ea; 
      SET   ; 
      =     #QERR_LR_AIN; 
      CLR   ; 
      =     #QERR_HR_AIN; 
      =     #QERR_CIRCUIT_AIN; 
      =     #QERR_BREAK_AIN; 
      L     #fLR; 
      T     #QfValTmp; 
      JU    A7eb; 
A7ea: L     #wVal; 
      L     -4864; 
      <=I   ; 
      L     #wVal; 
      L     -32768; 
      =     L     48.2; 
      >=I   ; 
      A     L     48.2; 
      JCN   A7eb; 
      SET   ; 
      =     #QERR_BREAK_AIN; 
      CLR   ; 
      =     #QERR_HR_AIN; 
      =     #QERR_CIRCUIT_AIN; 
      =     #QERR_LR_AIN; 
A7eb: CLR   ; 
      A     #QERR_CIRCUIT_AIN; 
      O     #QERR_BREAK_AIN; 
      JCN   A7ec; 
      SET   ; 
      =     #QERR_AIN; 
      A     #c_bValKEEP; 
      NOT   ; 
      JCN   A7f1; 
      L     #c_fValErr; 
      T     #QfVal; 
      JU    A7f1; 
A7ec: CLR   ; 
      =     #QERR_AIN; 
      L     #c_fTc; 
      L     0.000000e+000; 
      ==R   ; 
      JCN   A7ef; 
      L     #QfValTmp; 
      T     #QfVal; 
      JU    A7f0; 
A7ef: L     #SAMPLE_T; 
      L     #c_fTc; 
      /R    ; 
      L     #QfValTmp; 
      TAK   ; 
      T     LD    50; 
      TAK   ; 
      L     #QfVal; 
      -R    ; 
      L     LD    50; 
      *R    ; 
      L     #QfVal; 
      +R    ; 
      T     #QfVal; 
A7f0: JU    A7f1; 
A7e5: CLR   ; 
      A     #i_bWireBreak; 
      O     #i_bOverRun; 
      JCN   A7f2; 
      SET   ; 
      =     #QERR_AIN; 
      A     #i_bWireBreak; 
      JCN   A7f3; 
      SET   ; 
      =     #QERR_BREAK_AIN; 
      JU    A7f4; 
A7f3: CLR   ; 
      =     #QERR_BREAK_AIN; 
A7f4: CLR   ; 
      A     #i_bOverRun; 
      JCN   A7f5; 
      SET   ; 
      =     #QERR_CIRCUIT_AIN; 
      JU    A7f6; 
A7f5: CLR   ; 
      =     #QERR_CIRCUIT_AIN; 
A7f6: CLR   ; 
      A     #c_bValKEEP; 
      NOT   ; 
      JCN   A7f1; 
      L     #c_fValErr; 
      T     #QfVal; 
      JU    A7f1; 
A7f2: CLR   ; 
      =     #QERR_AIN; 
      =     #QERR_HR_AIN; 
      =     #QERR_LR_AIN; 
      =     #QERR_CIRCUIT_AIN; 
      =     #QERR_BREAK_AIN; 
      L     #c_fTc; 
      L     0.000000e+000; 
      ==R   ; 
      JCN   A7f9; 
      L     #fVal; 
      T     #QfVal; 
      JU    A7fa; 
A7f9: L     #SAMPLE_T; 
      L     #c_fTc; 
      /R    ; 
      L     #fVal; 
      TAK   ; 
      T     LD    50; 
      TAK   ; 
      L     #QfVal; 
      -R    ; 
      L     LD    50; 
      *R    ; 
      L     #QfVal; 
      +R    ; 
      T     #QfVal; 
A7fa: L     #QfVal; 
      T     #QfValTmp; 
A7f1: CLR   ; 
      A     #LIM_bHysSet; 
      JCN   A7fb; 
      L     #LIM_fHys; 
      T     #LIM_QfHys; 
      JU    A7fc; 
A7fb: L     #fHR; 
      L     #fLR; 
      -R    ; 
      L     #LIM_fHys; 
      *R    ; 
      L     1.000000e+002; 
      /R    ; 
      T     #LIM_QfHys; 
A7fc: CLR   ; 
      A     DIX [AR2,P#22.0]; 
      JCN   A7fd; 
      L     #LIM_QfAL; 
      L     #LIM_QfHys; 
      -R    ; 
      L     #QfVal; 
      TAK   ; 
      <=R   ; 
      JCN   A7fe; 
      SET   ; 
      =     DIX [AR2,P#282.0]; 
      JU    A7ff; 
A7fe: L     #LIM_QfAL; 
      L     #LIM_QfHys; 
      +R    ; 
      L     #QfVal; 
      TAK   ; 
      >R    ; 
      JCN   A801; 
      CLR   ; 
      =     DIX [AR2,P#282.0]; 
A7ff: JU    A801; 
A7fd: CLR   ; 
      =     DIX [AR2,P#282.0]; 
A801: CLR   ; 
      A     DIX [AR2,P#282.0]; 
      JCN   A802; 
      L     #QAL_T; 
      L     #SAMPLE_T; 
      +R    ; 
      T     #QAL_T; 
      L     #QAL_T; 
      L     #AL_DT; 
      >R    ; 
      JCN   A804; 
      SET   ; 
      =     #LIM_QbAL; 
      JU    A804; 
A802: L     0.000000e+000; 
      T     #QAL_T; 
      CLR   ; 
      =     #LIM_QbAL; 
A804: CLR   ; 
      A     DIX [AR2,P#22.1]; 
      JCN   A805; 
      L     #LIM_QfWL; 
      L     #LIM_QfHys; 
      -R    ; 
      L     #QfVal; 
      TAK   ; 
      <=R   ; 
      JCN   A806; 
      SET   ; 
      =     DIX [AR2,P#282.1]; 
      JU    A807; 
A806: L     #LIM_QfWL; 
      L     #LIM_QfHys; 
      +R    ; 
      L     #QfVal; 
      TAK   ; 
      >R    ; 
      JCN   A809; 
      CLR   ; 
      =     DIX [AR2,P#282.1]; 
A807: JU    A809; 
A805: CLR   ; 
      =     DIX [AR2,P#282.1]; 
A809: CLR   ; 
      A     DIX [AR2,P#282.1]; 
      JCN   A80a; 
      L     #QWL_T; 
      L     #SAMPLE_T; 
      +R    ; 
      T     #QWL_T; 
      L     #QWL_T; 
      L     #WL_DT; 
      >R    ; 
      JCN   A80c; 
      SET   ; 
      =     #LIM_QbWL; 
      JU    A80c; 
A80a: L     0.000000e+000; 
      T     #QWL_T; 
      CLR   ; 
      =     #LIM_QbWL; 
A80c: CLR   ; 
      A     DIX [AR2,P#22.2]; 
      JCN   A80d; 
      L     #LIM_QfWH; 
      L     #LIM_QfHys; 
      +R    ; 
      L     #QfVal; 
      TAK   ; 
      >=R   ; 
      JCN   A80e; 
      SET   ; 
      =     DIX [AR2,P#282.2]; 
      JU    A80f; 
A80e: L     #LIM_QfWH; 
      L     #LIM_QfHys; 
      -R    ; 
      L     #QfVal; 
      TAK   ; 
      <R    ; 
      JCN   A811; 
      CLR   ; 
      =     DIX [AR2,P#282.2]; 
A80f: JU    A811; 
A80d: CLR   ; 
      =     DIX [AR2,P#282.2]; 
A811: CLR   ; 
      A     DIX [AR2,P#282.2]; 
      JCN   A812; 
      L     #QWH_T; 
      L     #SAMPLE_T; 
      +R    ; 
      T     #QWH_T; 
      L     #QWH_T; 
      L     #WH_DT; 
      >R    ; 
      JCN   A814; 
      SET   ; 
      =     #LIM_QbWH; 
      JU    A814; 
A812: L     0.000000e+000; 
      T     #QWH_T; 
      CLR   ; 
      =     #LIM_QbWH; 
A814: CLR   ; 
      A     DIX [AR2,P#22.3]; 
      JCN   A815; 
      L     #LIM_QfAH; 
      L     #LIM_QfHys; 
      +R    ; 
      L     #QfVal; 
      TAK   ; 
      >=R   ; 
      JCN   A816; 
      SET   ; 
      =     DIX [AR2,P#282.3]; 
      JU    A817; 
A816: L     #LIM_QfAH; 
      L     #LIM_QfHys; 
      -R    ; 
      L     #QfVal; 
      TAK   ; 
      <R    ; 
      JCN   A819; 
      CLR   ; 
      =     DIX [AR2,P#282.3]; 
A817: JU    A819; 
A815: CLR   ; 
      =     DIX [AR2,P#282.3]; 
A819: CLR   ; 
      A     DIX [AR2,P#282.3]; 
      JCN   A81a; 
      L     #QAH_T; 
      L     #SAMPLE_T; 
      +R    ; 
      T     #QAH_T; 
      L     #QAH_T; 
      L     #AH_DT; 
      >R    ; 
      JCN   A81c; 
      SET   ; 
      =     #LIM_QbAH; 
      JU    A81c; 
A81a: L     0.000000e+000; 
      T     #QAH_T; 
      CLR   ; 
      =     #LIM_QbAH; 
A81c: L     #QAH_T; 
      L     9.999990e+005; 
      >=R   ; 
      JCN   A81d; 
      T     #QAH_T; 
A81d: L     #QWH_T; 
      L     9.999990e+005; 
      >=R   ; 
      JCN   A81e; 
      T     #QWH_T; 
A81e: L     #QWL_T; 
      L     9.999990e+005; 
      >=R   ; 
      JCN   A81f; 
      T     #QWL_T; 
A81f: L     #QAL_T; 
      L     9.999990e+005; 
      >=R   ; 
      JCN   A820; 
      T     #QAL_T; 
A820: CLR   ; 
      A     #LIM_QbAL; 
      O     #LIM_QbAH; 
      JCN   A821; 
      SET   ; 
      =     #QALARM; 
      JU    A822; 
A821: CLR   ; 
      =     #QALARM; 
A822: CLR   ; 
      A     #LIM_QbWL; 
      O     #LIM_QbWH; 
      JCN   A823; 
      SET   ; 
      =     #QWARN; 
      JU    A824; 
A823: CLR   ; 
      =     #QWARN; 
A824: L     #fHR; 
      T     #QfHR; 
      L     #fLR; 
      T     #QfLR; 
      L     #LIM_fAL; 
      T     #LIM_QfAL; 
      L     #LIM_fWL; 
      T     #LIM_QfWL; 
      L     #LIM_fWH; 
      T     #LIM_QfWH; 
      L     #LIM_fAH; 
      T     #LIM_QfAH; 
      L     #QfVal; 
      L     #QfHR; 
      >R    ; 
      JCN   A825; 
      L     #QfHR; 
      T     #QfVal; 
      JU    A827; 
A825: L     #QfVal; 
      L     #QfLR; 
      <R    ; 
      JCN   A827; 
      L     #QfLR; 
      T     #QfVal; 
A827: CLR   ; 
      A     #Q_bPIDOPE; 
      NOT   ; 
      =     #IntCONT_C.MAN_ON; 
      CLR   ; 
      =     #IntCONT_C.PVPER_ON; 
      A     #c_bPSel; 
      =     #IntCONT_C.P_SEL; 
      A     #c_bISel; 
      =     #IntCONT_C.I_SEL; 
      A     #c_bDSel; 
      =     #IntCONT_C.D_SEL; 
      A     #c_iIInital; 
      =     #IntCONT_C.I_ITL_ON; 
      A     #c_bDirRev; 
      NOT   ; 
      JCN   A828; 
      L     #QfVal; 
      T     #t_fPV; 
      JU    A829; 
A828: L     #fHR; 
      L     #fLR; 
      +R    ; 
      L     #QfVal; 
      -R    ; 
      T     #t_fPV; 
A829: L     #c_fKc; 
      T     #t_fKc; 
      L     #c_fTi; 
      L     1.000000e+003; 
      *R    ; 
      RND   ; 
      T     #t_fTi; 
      L     #c_fTd; 
      L     1.000000e+003; 
      *R    ; 
      RND   ; 
      T     #t_fTd; 
      L     #t_fPV; 
      T     #IntCONT_C.PV_IN; 
      L     #t_fKc; 
      T     #IntCONT_C.GAIN; 
      L     #t_fTi; 
      T     #IntCONT_C.TN; 
      L     #t_fTd; 
      T     #IntCONT_C.TV; 
      L     #c_fTdLAG; 
      T     #IntCONT_C.TM_LAG; 
      L     #c_fDeadBW; 
      T     #IntCONT_C.DEADB_W; 
      L     #c_fOPHL; 
      T     #IntCONT_C.LMN_HLM; 
      L     #c_fOPLL; 
      T     #IntCONT_C.LMN_LLM; 
      L     1.000000e+000; 
      T     #IntCONT_C.PV_FAC; 
      L     0.000000e+000; 
      T     #IntCONT_C.PV_OFF; 
      TAK   ; 
      T     #IntCONT_C.LMN_FAC; 
      TAK   ; 
      T     #IntCONT_C.LMN_OFF; 
      T     #IntCONT_C.I_ITLVAL; 
      L     #i_fDISV; 
      T     #IntCONT_C.DISV; 
      L     #i_fOCmdMANOP; 
      L     #c_fOPHR; 
      >R    ; 
      JCN   A82a; 
      L     #c_fOPHR; 
      T     #i_fOCmdMANOP; 
A82a: L     #i_fOCmdMANOP; 
      L     #c_fOPLR; 
      <R    ; 
      JCN   A82b; 
      L     #c_fOPLR; 
      T     #i_fOCmdMANOP; 
A82b: L     #i_fOCmdSP; 
      L     #fHR; 
      >R    ; 
      JCN   A82c; 
      L     #fHR; 
      T     #i_fOCmdSP; 
A82c: L     #i_fOCmdSP; 
      L     #fLR; 
      <R    ; 
      JCN   A82d; 
      L     #fLR; 
      T     #i_fOCmdSP; 
A82d: CLR   ; 
      A     #QMAN_AUT; 
      NOT   ; 
      JCN   A82e; 
      L     #i_fOCmdSP; 
      T     #SP; 
      A     #c_bDirRev; 
      NOT   ; 
      JCN   A82f; 
      L     #i_fOCmdSP; 
      T     #t_fSP; 
      JU    A831; 
A82f: L     #fHR; 
      L     #fLR; 
      +R    ; 
      L     #i_fOCmdSP; 
      -R    ; 
      T     #t_fSP; 
      JU    A831; 
A82e: L     #i_fPCmdSP; 
      T     #SP; 
      L     #i_fPCmdSP; 
      T     #i_fOCmdSP; 
      CLR   ; 
      A     #c_bDirRev; 
      NOT   ; 
      JCN   A832; 
      L     #i_fPCmdSP; 
      T     #t_fSP; 
      JU    A831; 
A832: L     #fHR; 
      L     #fLR; 
      +R    ; 
      L     #i_fPCmdSP; 
      -R    ; 
      T     #t_fSP; 
A831: L     #t_fSP; 
      T     #IntCONT_C.SP_INT; 
      CLR   ; 
      A     #Q_bPIDOPE; 
      NOT   ; 
      O     #Q_bLockOP; 
      JCN   A834; 
      L     #t_fPV; 
      T     #IntCONT_C.SP_INT; 
A834: CLR   ; 
      A     #OP_RESET; 
      JCN   A835; 
      CLR   ; 
      =     #Q_bLockOFF; 
A835: CLR   ; 
      A     #i_bLockOP; 
      A     #Q_bPIDOPE; 
      =     #Q_bLockOP; 
      A     #i_bLockOFF; 
      A     #Q_bPIDOPE; 
      JCN   A836; 
      SET   ; 
      =     #Q_bLockOFF; 
A836: L     #t_fPV; 
      L     #t_fSP; 
      >R    ; 
      L     #Q_fOP; 
      L     #c_fOPLL; 
      =     L     48.2; 
      <=R   ; 
      A     L     48.2; 
      A     #Q_bPIDOPE; 
      L     #t_fPV; 
      L     #t_fSP; 
      =     L     48.2; 
      <R    ; 
      L     #Q_fOP; 
      L     #c_fOPHL; 
      =     L     48.3; 
      >=R   ; 
      A     L     48.3; 
      A     #Q_bPIDOPE; 
      O     L     48.2; 
      O     #c_bIHOLD; 
      JCN   A837; 
      SET   ; 
      =     #Q_bIHOLD; 
      JU    A838; 
A837: CLR   ; 
      =     #Q_bIHOLD; 
A838: CLR   ; 
      A     #Q_bIHOLD; 
      =     #IntCONT_C.INT_HOLD; 
      A     #Q_bLockOP; 
      JCN   A839; 
      L     #c_fOPILErr; 
      T     #Q_fOP; 
      L     #c_fOPILErr; 
      T     #i_fOCmdMANOP; 
      L     #c_fOPILErr; 
      T     #i_fPCmdMANOP; 
A839: CLR   ; 
      A     #Q_bPIDOPE; 
      NOT   ; 
      A     #c_bOPTrack; 
      JCN   A83a; 
      L     #i_fOPTrackV; 
      T     #i_fOCmdMANOP; 
      L     #i_fOPTrackV; 
      T     #i_fPCmdMANOP; 
      L     #i_fOPTrackV; 
      T     #Q_fOP; 
      SET   ; 
      =     #t_bOCmdOPlock; 
      JU    A83b; 
A83a: CLR   ; 
      =     #t_bOCmdOPlock; 
A83b: CLR   ; 
      A     #Q_bLockOFF; 
      JCN   A83c; 
      CLR   ; 
      =     #Q_bPIDOPE; 
      L     #c_fOPILOff; 
      T     #Q_fOP; 
      L     #c_fOPILOff; 
      T     #i_fOCmdMANOP; 
      L     #c_fOPILOff; 
      T     #i_fPCmdMANOP; 
A83c: L     #Q_fOP; 
      L     #c_fOPHR; 
      >R    ; 
      JCN   A83d; 
      L     #c_fOPHR; 
      T     #Q_fOP; 
A83d: L     #Q_fOP; 
      L     #c_fOPLR; 
      <R    ; 
      JCN   A83e; 
      L     #c_fOPLR; 
      T     #Q_fOP; 
A83e: CLR   ; 
      A     #c_bNONC; 
      NOT   ; 
      JCN   A83f; 
      L     #Q_fOP; 
      L     2.764800e+004; 
      *R    ; 
      L     #c_fOPHR; 
      TAK   ; 
      T     LD    50; 
      TAK   ; 
      L     #c_fOPLR; 
      -R    ; 
      L     LD    50; 
      TAK   ; 
      /R    ; 
      RND   ; 
      T     #Q_wOP; 
      JU    A840; 
A83f: L     #c_fOPHR; 
      L     #c_fOPLR; 
      +R    ; 
      L     #Q_fOP; 
      -R    ; 
      L     2.764800e+004; 
      *R    ; 
      L     #c_fOPHR; 
      TAK   ; 
      T     LD    50; 
      TAK   ; 
      L     #c_fOPLR; 
      -R    ; 
      L     LD    50; 
      TAK   ; 
      /R    ; 
      RND   ; 
      T     #Q_wOP; 
A840: CLR   ; 
      A     #c_bOPTrack; 
      NOT   ; 
      A     #QMAN_AUT; 
      =     L     48.2; 
      A     #Q_bPIDOPE; 
      NOT   ; 
      A     L     48.2; 
      JCN   A841; 
      L     #i_fPCmdMANOP; 
      T     #Q_fOP; 
A841: CLR   ; 
      A     #QMAN_AUT; 
      NOT   ; 
      =     L     48.2; 
      A     #c_bOPTrack; 
      NOT   ; 
      A     L     48.2; 
      =     L     48.2; 
      A     #Q_bPIDOPE; 
      NOT   ; 
      A     L     48.2; 
      JCN   A842; 
      L     #i_fOCmdMANOP; 
      T     #Q_fOP; 
A842: L     #Q_fOP; 
      L     #c_fOPHR; 
      >R    ; 
      JCN   A843; 
      L     #c_fOPHR; 
      T     #Q_fOP; 
A843: L     #Q_fOP; 
      L     #c_fOPLR; 
      <R    ; 
      JCN   A844; 
      L     #c_fOPLR; 
      T     #Q_fOP; 
A844: L     #Q_fOP; 
      T     #IntCONT_C.MAN; 
      +AR2  P#288.0; 
      UC    FB     1; 
	  L		7904;	// todo: test
	  SLD	3;
	  +AR2;
      // +AR2  P#7904.0; 
      A     #Q_bLockOP; 
      NOT   ; 
      A     #Q_bPIDOPE; 
      JCN   A845; 
      L     #IntCONT_C.LMN; 
      T     #Q_fOP; 
      A     #c_bNONC; 
      NOT   ; 
      JCN   A846; 
      L     #Q_fOP; 
      L     2.764800e+004; 
      *R    ; 
      L     #c_fOPHR; 
      TAK   ; 
      T     LD    50; 
      TAK   ; 
      L     #c_fOPLR; 
      -R    ; 
      L     LD    50; 
      TAK   ; 
      /R    ; 
      RND   ; 
      T     #Q_wOP; 
      JU    A845; 
A846: L     #c_fOPHR; 
      L     #c_fOPLR; 
      +R    ; 
      L     #Q_fOP; 
      -R    ; 
      L     2.764800e+004; 
      *R    ; 
      L     #c_fOPHR; 
      TAK   ; 
      T     LD    50; 
      TAK   ; 
      L     #c_fOPLR; 
      -R    ; 
      L     LD    50; 
      TAK   ; 
      /R    ; 
      RND   ; 
      T     #Q_wOP; 
A845: L     #Q_fOP; 
      L     1.000000e+000; 
      >=R   ; 
      JCN   A848; 
      SET   ; 
      =     #q_bOPEN; 
      JU    A849; 
A848: CLR   ; 
      =     #q_bOPEN; 
A849: CLR   ; 
      A     #Q_bPIDOPE; 
      JCN   A84a; 
      L     #Q_fOP; 
      T     #i_fPCmdMANOP; 
      L     #SP; 
      T     #i_fOCmdSP; 
A84a: L     #SP; 
      L     #fHR; 
      >=R   ; 
      JCN   A84b; 
      L     #fHR; 
      T     #SP; 
      L     #fHR; 
      T     #i_fOCmdSP; 
A84b: L     #SP; 
      L     #fLR; 
      <=R   ; 
      JCN   A84c; 
      L     #fLR; 
      T     #SP; 
      L     #fLR; 
      T     #i_fOCmdSP; 
A84c: CLR   ; 
      A     #Q_bPIDOPE; 
      NOT   ; 
      A     #c_bSPTrack; 
      =     L     48.2; 
      A     #QMAN_AUT; 
      NOT   ; 
      A     L     48.2; 
      JCN   A84d; 
      L     #QfVal; 
      T     #i_fOCmdSP; 
      SET   ; 
      =     #t_bOCmdSPlock; 
      JU    A84e; 
A84d: CLR   ; 
      =     #t_bOCmdSPlock; 
A84e: CLR   ; 
      A     #c_bHasFBPos; 
      JCN   A84f; 
      A     #c_bFBPosW; 
      JCN   A850; 
      L     #i_wFBPos; 
      L     32511; 
      >I    ; 
      L     #i_wFBPos; 
      L     32767; 
      =     L     48.2; 
      <=I   ; 
      A     L     48.2; 
      L     #i_wFBPos; 
      L     -4864; 
      =     L     48.2; 
      <=I   ; 
      L     #i_wFBPos; 
      L     -32768; 
      =     L     48.3; 
      >=I   ; 
      A     L     48.3; 
      O     L     48.2; 
      JCN   A851; 
      SET   ; 
      =     #q_bFBPosERR; 
      JU    A854; 
A851: CLR   ; 
      =     #q_bFBPosERR; 
      L     #i_wFBPos; 
      AD    DW#16#FFFF; 
      DTR   ; 
      L     3.616898e-003; 
      *R    ; 
      T     #q_fFBPos; 
      L     #i_wFBPos; 
      L     -4864; 
      >I    ; 
      L     #i_wFBPos; 
      L     0; 
      =     L     48.2; 
      <I    ; 
      A     L     48.2; 
      JCN   A853; 
      L     0.000000e+000; 
      T     #q_fFBPos; 
A853: JU    A854; 
A850: L     #i_fFBPos; 
      T     #q_fFBPos; 
      CLR   ; 
      =     #q_bFBPosERR; 
A854: L     #q_fFBPos; 
      L     1.000000e+002; 
      >R    ; 
      JCN   A855; 
      T     #q_fFBPos; 
      JU    A856; 
A855: L     #q_fFBPos; 
      L     0.000000e+000; 
      <R    ; 
      JCN   A858; 
      T     #q_fFBPos; 
A856: JU    A858; 
A84f: L     0.000000e+000; 
      T     #q_fFBPos; 
      CLR   ; 
      =     #q_bFBPosERR; 
A858: CLR   ; 
      A     #c_bHasFBPos; 
      A     #QMON; 
      JCN   A859; 
      L     #q_fFBPos; 
      L     #Q_fOP; 
      -R    ; 
      ABS   ; 
      L     #c_fMONPosR; 
      >R    ; 
      JCN   A85a; 
      L     #QMON_T; 
      L     #SAMPLE_T; 
      +R    ; 
      T     #QMON_T; 
      L     #QMON_T; 
      L     #c_fMONT; 
      >=R   ; 
      TAK   ; 
      L     1.000000e+009; 
      =     L     48.2; 
      >=R   ; 
      O     L     48.2; 
      JCN   A85b; 
      SET   ; 
      =     #QMON_ERR; 
A85b: L     #QMON_T; 
      L     1.000000e+009; 
      >=R   ; 
      JCN   A859; 
      T     #QMON_T; 
      JU    A859; 
A85a: L     0.000000e+000; 
      T     #QMON_T; 
      CLR   ; 
      =     #QMON_ERR; 
A859: CLR   ; 
      A     #q_bOPEN; 
      NOT   ; 
      =     DIX [AR2,P#276.0]; 
      A     #q_bFBPosERR; 
      A     #c_bHasFBPos; 
      =     DIX [AR2,P#276.1]; 
      A     #q_bOPEN; 
      =     DIX [AR2,P#276.2]; 
      A     #c_bNONC; 
      =     DIX [AR2,P#276.3]; 
      A     #LIM_QbAL; 
      =     DIX [AR2,P#276.4]; 
      A     #LIM_QbWL; 
      =     DIX [AR2,P#276.5]; 
      A     #LIM_QbWH; 
      =     DIX [AR2,P#276.6]; 
      A     #LIM_QbAH; 
      =     DIX [AR2,P#276.7]; 
      A     #QWARN; 
      =     DIX [AR2,P#277.0]; 
      A     #QALARM; 
      =     DIX [AR2,P#277.1]; 
      A     #QMON; 
      =     DIX [AR2,P#277.2]; 
      A     #QMON_ERR; 
      =     DIX [AR2,P#277.3]; 
      A     #QERR_LR_AIN; 
      =     DIX [AR2,P#277.4]; 
      A     #QERR_HR_AIN; 
      =     DIX [AR2,P#277.5]; 
      A     #QERR_CIRCUIT_AIN; 
      =     DIX [AR2,P#277.6]; 
      A     #QERR_BREAK_AIN; 
      =     DIX [AR2,P#277.7]; 
      A     #Q_bPIDOPE; 
      =     DIX [AR2,P#278.0]; 
      A     #QMAN_AUT; 
      =     DIX [AR2,P#278.1]; 
      A     #QMAN_AUT; 
      O     #t_bOCmdSPlock; 
      =     DIX [AR2,P#278.2]; 
      A     #t_bOCmdOPlock; 
      O     #Q_bPIDOPE; 
      O     #QMAN_AUT; 
      =     DIX [AR2,P#278.3]; 
      A     #c_bOPTrack; 
      =     DIX [AR2,P#278.4]; 
      A     #c_bSPTrack; 
      =     DIX [AR2,P#278.5]; 
      A     #c_bDirRev; 
      =     DIX [AR2,P#278.6]; 
      A     DIX [AR2,P#261.7]; 
      NOT   ; 
      O     #q_bFBPosERR; 
      A     #c_bHasFBPos; 
      =     DIX [AR2,P#278.7]; 
      A     #QERR_AIN; 
      =     DIX [AR2,P#279.0]; 
      CLR   ; 
      =     DIX [AR2,P#279.1]; 
      A     #Q_bLockOP; 
      O     #Q_bLockOFF; 
      =     DIX [AR2,P#279.2]; 
      A     #Q_bLockOP; 
      =     DIX [AR2,P#279.3]; 
      A     #Q_bLockOFF; 
      =     DIX [AR2,P#279.4]; 
      A     #c_bHasFBPos; 
      =     DIX [AR2,P#279.5]; 
      A     #c_bHasFBPos; 
      NOT   ; 
      =     DIX [AR2,P#279.6]; 
      A     #LIOP_SEL; 
      =     DIX [AR2,P#279.7]; 
      L     DIB [AR2,P#279.0]; 
      T     DIB [AR2,P#164.0]; 
      L     DIB [AR2,P#278.0]; 
      T     DIB [AR2,P#165.0]; 
      L     DIB [AR2,P#277.0]; 
      T     DIB [AR2,P#166.0]; 
      L     DIB [AR2,P#276.0]; 
      T     DIB [AR2,P#167.0]; 
      A     DIX [AR2,P#22.0]; 
      =     DIX [AR2,P#280.0]; 
      A     DIX [AR2,P#22.1]; 
      =     DIX [AR2,P#280.1]; 
      A     DIX [AR2,P#22.2]; 
      =     DIX [AR2,P#280.2]; 
      A     DIX [AR2,P#22.3]; 
      =     DIX [AR2,P#280.3]; 
      CLR   ; 
      =     DIX [AR2,P#280.4]; 
      =     DIX [AR2,P#280.5]; 
      =     DIX [AR2,P#280.6]; 
      =     DIX [AR2,P#280.7]; 
      =     DIX [AR2,P#281.0]; 
      =     DIX [AR2,P#281.1]; 
      =     DIX [AR2,P#281.2]; 
      =     DIX [AR2,P#281.3]; 
      =     DIX [AR2,P#281.4]; 
      =     DIX [AR2,P#281.5]; 
      =     DIX [AR2,P#281.6]; 
      =     DIX [AR2,P#281.7]; 
      L     DIB [AR2,P#281.0]; 
      T     DIB [AR2,P#168.0]; 
      L     DIB [AR2,P#280.0]; 
      T     DIB [AR2,P#169.0]; 
      SET   ; 
      =     #A8P.EN_R; 
      A     #LIM_QbAH; 
      =     #A8P.SIG_1; 
      A     #LIM_QbWH; 
      =     #A8P.SIG_2; 
      A     #LIM_QbWL; 
      =     #A8P.SIG_3; 
      A     #LIM_QbAL; 
      =     #A8P.SIG_4; 
      A     #QERR_AIN; 
      =     #A8P.SIG_5; 
      A     #QMON_ERR; 
      =     #A8P.SIG_6; 
      A     #Q_bLockOFF; 
      =     #A8P.SIG_7; 
      A     #q_bFBPosERR; 
      =     #A8P.SIG_8; 
      L     W#16#EEEE; 
      T     #A8P.ID; 
      L     #MSG1_EVID; 
      T     #A8P.EV_ID; 
      L     W#16#40; 
      T     #A8P.SEVERITY; 
      +AR2  P#424.0; 
      UC    SFB   35; 
	  L 	7768;	// todo: test
	  SLD	3;
	  +AR2;
      //+AR2  P#7768.0; 
      A     #A8P.DONE; 
      =     #MSG1_bDone; 
      A     #A8P.ERROR; 
      =     #MSG1_bError; 
      L     #A8P.STATUS; 
      T     #MSG1_wState; 
      L     #A8P.ACK_STATE; 
      T     #MSG1_wAck; 
      L     0; 
      T     #q_iALM_PV; 
      A     DIX [AR2,P#261.1]; 
      NOT   ; 
      =     L     48.2; 
      A     DIX [AR2,P#261.2]; 
      NOT   ; 
      O     L     48.2; 
      JCN   A85e; 
      L     1; 
      T     #q_iALM_PV; 
      JU    A860; 
A85e: CLR   ; 
      A     #LIM_QbWH; 
      O     #LIM_QbWL; 
      JCN   A860; 
      L     2; 
      T     #q_iALM_PV; 
A860: CLR   ; 
      A     DIX [AR2,P#261.0]; 
      NOT   ; 
      =     L     48.2; 
      A     DIX [AR2,P#261.3]; 
      NOT   ; 
      O     L     48.2; 
      JCN   A861; 
      L     3; 
      T     #q_iALM_PV; 
      JU    A863; 
A861: CLR   ; 
      A     #LIM_QbAH; 
      O     #LIM_QbAL; 
      JCN   A863; 
      L     4; 
      T     #q_iALM_PV; 
A863: CLR   ; 
      A     DIX [AR2,P#261.4]; 
      NOT   ; 
      JCN   A864; 
      L     5; 
      T     #q_iALM_PV; 
      JU    A866; 
A864: CLR   ; 
      A     #QERR_AIN; 
      JCN   A866; 
      L     6; 
      T     #q_iALM_PV; 
A866: L     0; 
      T     #q_iALM_PID; 
      CLR   ; 
      A     DIX [AR2,P#261.6]; 
      NOT   ; 
      JCN   A867; 
      L     1; 
      T     #q_iALM_PID; 
      JU    A869; 
A867: CLR   ; 
      A     #Q_bLockOFF; 
      JCN   A869; 
      L     2; 
      T     #q_iALM_PID; 
A869: L     0; 
      T     #q_iALM_CV; 
      CLR   ; 
      A     DIX [AR2,P#261.7]; 
      NOT   ; 
      =     L     48.2; 
      A     DIX [AR2,P#261.5]; 
      NOT   ; 
      O     L     48.2; 
      JCN   A86a; 
      L     1; 
      T     #q_iALM_CV; 
      JU    A86c; 
A86a: CLR   ; 
      A     DIX [AR2,P#278.7]; 
      O     #QMON_ERR; 
      JCN   A86c; 
      L     2; 
      T     #q_iALM_CV; 
A86c: L     DW#16#0; 
      T     #OP_dwCmd; 
      CLR   ; 
      A     L     48.1; 
      SAVE  ; 
      BE    ; 
END_FUNCTION_BLOCK

(*$ALARM_SERVER <HEADERS STEP7_VERSION="262144" CODING="true"><LANGUAGE LCID="1031">German</LANGUAGE><STD_LANGUAGE>1031</STD_LANGUAGE><HEADER PARENT="RkIzMDA=" PARENT_SYM="Q01fUElEQUlOQ1ZfNDAw"><VERSION>Q1BVX1dJREVfQUxBUk1OUg==</VERSION><STRUCTTYPE>1</STRUCTTYPE><ATTR_STATE>0</ATTR_STATE><PRODUCER>1</PRODUCER><ALARM NAME="TVNHMV9FVklE"><ATTR_STATE>0</ATTR_STATE><ALARMNR>0</ALARMNR><ALARMTYPE>YWxhcm1fOHA=</ALARMTYPE><DISPLAYGROUP>0</DISPLAYGROUP><SUBCOUNT>8</SUBCOUNT><RANGE>0</RANGE><PROTOCOL>0</PROTOCOL><SUBALARM ID="1"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="2"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="3"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="4"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="5"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="6"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="7"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="8"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM></ALARM></HEADER></HEADERS> *)

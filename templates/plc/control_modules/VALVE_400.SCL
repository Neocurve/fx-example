FUNCTION_BLOCK CM_VALVE_400
TITLE =
{ S7_m_c := 'true'; S7_blockview := 'big'; S7_tasklist := 'OB100' }
AUTHOR : 
FAMILY : 
NAME : VALVE
VERSION : 0.0


VAR_INPUT
  LOCK { S7_dynamic := 'true' }: BOOL ;	//1=Interlocked; Default=0
  LIOP_SEL { S7_dynamic := 'true' }: BOOL ;	//1=A/M mode by link only; Default=0
  SAMPLE_T { S7_sampletime := 'true' }: REAL ;	//Sample time; Defined by OB during compiling
  c_bNONC { S7_dynamic := 'true' }: BOOL ;	//1=Normal open valve; 0=Normal close valve; Default=0
  c_bLockOpen { S7_dynamic := 'true' }: BOOL ;	//1=Open valve when interlocked; 0=Close valve when interlocked; Default=0
  c_bMonErrOpen { S7_dynamic := 'true' }: BOOL ;	//1=Open valve when valve feedback error; 0=Close valve when valve feedback error
  c_bHasFBO { S7_dynamic := 'true' }: BOOL ;	//1=Has valve open feedback; Default=0
  c_bHasFBC { S7_dynamic := 'true' }: BOOL ;	//1=Has valve close feedback; Default=0
  c_bMON { S7_dynamic := 'true' }: BOOL ;	//1=Ennable valve feedback monitoring; Default=0 
  c_fMONT { S7_dynamic := 'true' }: REAL  := 1.000000e+001;	//alve feedback monitoring time; Default=10s
  i_bFBO { S7_dynamic := 'true' }: BOOL ;	//1=Valve feedback open; Linked from DI channel generally; Default=0
  i_bFBC { S7_dynamic := 'true' }: BOOL  := TRUE;	//1=Valve feedback close; Linked from DI channel generally; Default=1
  MSG1_EVID { S7_visible := 'false'; S7_link := 'false'; S7_param := 'false'; S7_server := 'alarm_archiv'; S7_a_type := 'alarm_8p' }: DWORD ;	
END_VAR
VAR_OUTPUT
  QdwState { S7_dynamic := 'true'; S7_m_c := 'true'; S7_visible := 'false' }: DWORD ;	//Valve status for icon and faceplate; Default=0
  QwState { S7_dynamic := 'true'; S7_visible := 'false' }: WORD ;	//0=Close; 1=Opening; 2=Open; 3=Closing; Default=0
  QCLOSE { S7_dynamic := 'true' }: BOOL ;	//1=Closed; Default=0
  QOPENING { S7_dynamic := 'true' }: BOOL ;	//1=Opening; Default=0
  QOPEN { S7_dynamic := 'true'; S7_m_c := 'true' }: BOOL ;	//1=Open; Default=0
  QCLOSING { S7_dynamic := 'true' }: BOOL ;	//1=Closing; Default=0
  QCMD_OP { S7_dynamic := 'true'; S7_visible := 'false' }: BOOL ;	//1=Open command; Default=0
  q_bCmd { S7_dynamic := 'true' }: BOOL ;	//NC:1=Open 0=Close; NO:1=Close 0=Open; Linked to DO channel generally; Default=0
  q_bFBO { S7_dynamic := 'true'; S7_m_c := 'true'; S7_archive := 'shortterm' }: BOOL ;	//1=Valve feedback open; Default=0
  q_bFBC { S7_dynamic := 'true' }: BOOL  := TRUE;	//1=Valve feedback close; Default=0
  QMON { S7_dynamic := 'true' }: BOOL ;	//1=Vavle feedback monitoring enable; Default=0
  QMON_ERR { S7_dynamic := 'true' }: BOOL ;	//1=Valve feedback error; Default=0
  QMON_T { S7_dynamic := 'true' }: REAL ;	//Current motor feedback monitoring time; Default=0
  QMAN_AUT { S7_dynamic := 'true'; S7_m_c := 'true'; S7_archive := 'shortterm' }: BOOL ;	//1=Auto mode; 0=Manual mode; Default=0
  QLOCK { S7_dynamic := 'true' }: BOOL ;	//1=Interlock error active; Default=0
  QERR { S7_dynamic := 'true' }: BOOL ;	//1=Vavle feedback error or interlock error; Default=0 
  q_intAlarmIndex { S7_dynamic := 'true'; S7_m_c := 'true'; S7_visible := 'false' }: INT ;	//Alarm Index for WinCC icon display; Default=0
  MSG1_bDone { S7_visible := 'false' }: BOOL ;	//A8P
  MSG1_bError { S7_visible := 'false' }: BOOL ;	//A8P
  MSG1_wState { S7_visible := 'false' }: WORD ;	//A8P
  MSG1_wAck { S7_visible := 'false' }: WORD ;	//A8P
END_VAR
VAR_IN_OUT
  OP_dwCmd { S7_dynamic := 'true'; S7_m_c := 'true'; S7_visible := 'false' }: DWORD ;	//Control command from faceplate; Default=0
  i_bPCmdAUT { S7_dynamic := 'true' }: BOOL ;	//1=Switch to AUTO mode; Default=0
  i_bPCmdMAN { S7_dynamic := 'true' }: BOOL ;	//1=Switch to MAN mode; Default=0
  i_bPCmdON { S7_dynamic := 'true' }: BOOL ;	//1=Switch to ON; Default=0
  i_bPCmdOFF { S7_dynamic := 'true' }: BOOL ;	//1=Switch to OFF; Default=0
  i_bRESET { S7_dynamic := 'true' }: BOOL ;	//1=Reset error; Default=0
END_VAR
VAR
  OPdwCmdHMI : DWORD ;	//Operator Commands in HMI format
  OPdwCmdPLC : DWORD ;	//Operator Commands in PLC format
  QdwStatePLC : DWORD ;	//State word in PLC format
  A8P : SFB 35;	
  STRUCT_TS : STRUCT 	
   wFormat : WORD ;	//time format
   aDT : ARRAY  [1 .. 8 ] OF //array date and time
   DATE_AND_TIME ;	//array date and time
  END_STRUCT ;	
  OP_RESET : BOOL ;	
  QOPENING_OLD : BOOL ;	
  QCLOSING_OLD : BOOL ;	
END_VAR
VAR_TEMP
  TOP_SI : STRUCT 	
   EV_CLASS : BYTE ;	
   EV_NUM : BYTE ;	
   PRIORITY : BYTE ;	
   NUM : BYTE ;	
   TYP2_3 : BYTE ;	
   TYP1 : BYTE ;	
   ZI1 : WORD ;	
   ZI2_3 : DWORD ;	
  END_STRUCT ;	
  START_UP_SI : STRUCT 	
   EV_CLASS : BYTE ;	
   EV_NUM : BYTE ;	
   PRIORITY : BYTE ;	
   NUM : BYTE ;	
   TYP2_3 : BYTE ;	
   TYP1 : BYTE ;	
   ZI1 : WORD ;	
   ZI2_3 : DWORD ;	
  END_STRUCT ;	
  iRet : INT ;	
END_VAR
BEGIN
NETWORK
TITLE =SCL network
//compiled by SCL compiler version:  SCLCOMP K05.03.07.00_01.02.00.01 release
      SET   ; 
      SAVE  ; 
      =     L     26.1; 
      L     W#16#0; 
      T     LW    28; 
      L     DW#16#87000000; 
      T     LD    30; 
      L     W#16#0; 
      T     LW    34; 
      L     DW#16#87000060; 
      T     LD    36; 
      TAR2  LD    40; 
      CALL    SFC    6( 
            RET_VAL:= iRet,
            TOP_SI:= #TOP_SI,
            START_UP_SI:= #START_UP_SI);
      LAR2  LD    40;
      L     #iRet; 
      L     #TOP_SI.NUM; 
      L     B#16#64; 
      ==I   ; 
      JCN   A7d0; 
      CLR   ; 
      =     #QCMD_OP; 
      SET   ; 
      =     #QCLOSE; 
      CLR   ; 
      =     #QOPENING; 
      =     #QOPEN; 
      =     #QCLOSING; 
      L     W#16#0; 
      T     #QwState; 
      =     #i_bRESET; 
      L     0; 
      T     #iRet; 
A7d0: L     #OP_dwCmd; 
      T     #OPdwCmdHMI; 
      L     DIB [AR2,P#49.0]; 
      T     DIB [AR2,P#50.0]; 
      L     DIB [AR2,P#48.0]; 
      T     DIB [AR2,P#51.0]; 
      L     DIB [AR2,P#47.0]; 
      T     DIB [AR2,P#52.0]; 
      L     DIB [AR2,P#46.0]; 
      T     DIB [AR2,P#53.0]; 
      CLR   ; 
      A     #LIOP_SEL; 
      NOT   ; 
      A     DIX [AR2,P#52.0]; 
      O     #i_bPCmdMAN; 
      JCN   A7d1; 
      CLR   ; 
      =     #QMAN_AUT; 
      JU    A7d3; 
A7d1: CLR   ; 
      A     #LIOP_SEL; 
      NOT   ; 
      A     DIX [AR2,P#52.1]; 
      O     #i_bPCmdAUT; 
      JCN   A7d3; 
      SET   ; 
      =     #QMAN_AUT; 
A7d3: CLR   ; 
      =     #i_bPCmdMAN; 
      =     #i_bPCmdAUT; 
      A     #i_bRESET; 
      O     DIX [AR2,P#53.0]; 
      JCN   A7d4; 
      SET   ; 
      =     #OP_RESET; 
      JU    A7d5; 
A7d4: CLR   ; 
      =     #OP_RESET; 
A7d5: CLR   ; 
      =     #i_bRESET; 
      A     DIX [AR2,P#51.0]; 
      JCN   A7d6; 
      SET   ; 
      =     #c_bMON; 
      JU    A7d8; 
A7d6: CLR   ; 
      A     DIX [AR2,P#51.1]; 
      JCN   A7d8; 
      CLR   ; 
      =     #c_bMON; 
A7d8: CLR   ; 
      A     #c_bMON; 
      =     #QMON; 
      A     #QMAN_AUT; 
      A     #i_bPCmdOFF; 
      =     L     26.2; 
      A     #LOCK; 
      NOT   ; 
      A     L     26.2; 
      JCN   A7d9; 
      CLR   ; 
      =     #QCMD_OP; 
      JU    A7db; 
A7d9: CLR   ; 
      A     #QMAN_AUT; 
      A     #i_bPCmdON; 
      =     L     26.2; 
      A     #LOCK; 
      NOT   ; 
      A     L     26.2; 
      JCN   A7db; 
      SET   ; 
      =     #QCMD_OP; 
A7db: CLR   ; 
      =     #i_bPCmdOFF; 
      =     #i_bPCmdON; 
      A     #QOPENING; 
      O     #QOPEN; 
      A     #LOCK; 
      =     L     26.2; 
      A     #c_bLockOpen; 
      NOT   ; 
      A     L     26.2; 
      JCN   A7dc; 
      SET   ; 
      =     #QLOCK; 
A7dc: CLR   ; 
      A     #QCLOSING; 
      O     #QCLOSE; 
      A     #LOCK; 
      A     #c_bLockOpen; 
      JCN   A7dd; 
      SET   ; 
      =     #QLOCK; 
A7dd: CLR   ; 
      A     #c_bLockOpen; 
      NOT   ; 
      A     #QLOCK; 
      JCN   A7de; 
      CLR   ; 
      =     #QCMD_OP; 
A7de: CLR   ; 
      A     #QLOCK; 
      A     #c_bLockOpen; 
      JCN   A7df; 
      SET   ; 
      =     #QOPEN; 
      =     #QCMD_OP; 
A7df: CLR   ; 
      A     #QMAN_AUT; 
      NOT   ; 
      A     DIX [AR2,P#50.1]; 
      =     L     26.2; 
      A     #LOCK; 
      NOT   ; 
      A     L     26.2; 
      JCN   A7e0; 
      SET   ; 
      =     #QCMD_OP; 
      JU    A7e2; 
A7e0: CLR   ; 
      A     #QMAN_AUT; 
      NOT   ; 
      A     DIX [AR2,P#50.0]; 
      =     L     26.2; 
      A     #LOCK; 
      NOT   ; 
      A     L     26.2; 
      JCN   A7e2; 
      CLR   ; 
      =     #QCMD_OP; 
A7e2: CLR   ; 
      A     #QCMD_OP; 
      NOT   ; 
      L     #QwState; 
      L     W#16#3; 
      =     L     26.2; 
      ==I   ; 
      A     L     26.2; 
      =     L     26.2; 
      A     #QMON_ERR; 
      NOT   ; 
      A     L     26.2; 
      A     #i_bFBC; 
      =     L     26.2; 
      A     #QCMD_OP; 
      NOT   ; 
      L     #QwState; 
      L     W#16#3; 
      =     L     26.3; 
      ==I   ; 
      A     L     26.3; 
      =     L     26.3; 
      A     #QMON; 
      NOT   ; 
      A     L     26.3; 
      O     L     26.2; 
      JCN   A7e3; 
      SET   ; 
      =     #QCLOSE; 
      CLR   ; 
      =     #QOPENING; 
      =     #QOPEN; 
      =     #QCLOSING; 
      L     W#16#0; 
      T     #QwState; 
A7e3: L     #QwState; 
      L     W#16#0; 
      ==I   ; 
      L     #QwState; 
      L     W#16#3; 
      =     L     26.2; 
      ==I   ; 
      O     L     26.2; 
      A     #QCMD_OP; 
      JCN   A7e4; 
      CLR   ; 
      =     #QCLOSE; 
      SET   ; 
      =     #QOPENING; 
      CLR   ; 
      =     #QOPEN; 
      =     #QCLOSING; 
      L     W#16#1; 
      T     #QwState; 
A7e4: L     #QwState; 
      L     W#16#1; 
      ==I   ; 
      A     #QCMD_OP; 
      =     L     26.2; 
      A     #QMON_ERR; 
      NOT   ; 
      A     L     26.2; 
      A     #i_bFBO; 
      L     #QwState; 
      L     W#16#1; 
      =     L     26.2; 
      ==I   ; 
      A     #QCMD_OP; 
      =     L     26.3; 
      A     #QMON; 
      NOT   ; 
      A     L     26.3; 
      O     L     26.2; 
      JCN   A7e5; 
      CLR   ; 
      =     #QCLOSE; 
      =     #QOPENING; 
      SET   ; 
      =     #QOPEN; 
      CLR   ; 
      =     #QCLOSING; 
      L     W#16#2; 
      T     #QwState; 
A7e5: CLR   ; 
      A     #QCMD_OP; 
      NOT   ; 
      L     #QwState; 
      L     W#16#1; 
      =     L     26.2; 
      ==I   ; 
      L     #QwState; 
      L     W#16#2; 
      =     L     26.3; 
      ==I   ; 
      O     L     26.3; 
      A     L     26.2; 
      JCN   A7e6; 
      CLR   ; 
      =     #QCLOSE; 
      =     #QOPENING; 
      =     #QOPEN; 
      SET   ; 
      =     #QCLOSING; 
      L     W#16#3; 
      T     #QwState; 
A7e6: CLR   ; 
      A     #QMON; 
      JCN   A7e7; 
      A     #QOPENING_OLD; 
      NOT   ; 
      A     #QOPENING; 
      =     L     26.2; 
      A     #QCLOSING_OLD; 
      NOT   ; 
      A     #QCLOSING; 
      O     L     26.2; 
      JCN   A7e8; 
      L     0.000000e+000; 
      T     #QMON_T; 
A7e8: CLR   ; 
      A     #QOPENING; 
      O     #QCLOSING; 
      JCN   A7e9; 
      L     #QMON_T; 
      L     #SAMPLE_T; 
      +R    ; 
      T     #QMON_T; 
      L     #QMON_T; 
      L     #c_fMONT; 
      >=R   ; 
      JCN   A7eb; 
      SET   ; 
      =     #QMON_ERR; 
      JU    A7eb; 
A7e9: L     0.000000e+000; 
      T     #QMON_T; 
A7eb: CLR   ; 
      A     #i_bFBO; 
      NOT   ; 
      O     #i_bFBC; 
      A     #QOPEN; 
      =     L     26.2; 
      A     #i_bFBC; 
      NOT   ; 
      O     #i_bFBO; 
      A     #QCLOSE; 
      O     L     26.2; 
      JCN   A7e7; 
      SET   ; 
      =     #QMON_ERR; 
A7e7: CLR   ; 
      A     #QMON_ERR; 
      O     #QLOCK; 
      =     #QERR; 
      A     #OP_RESET; 
      JCN   A7ed; 
      CLR   ; 
      =     #QMON_ERR; 
      =     #QLOCK; 
A7ed: CLR   ; 
      A     #c_bMonErrOpen; 
      NOT   ; 
      A     #QMON_ERR; 
      JCN   A7ee; 
      SET   ; 
      =     #QCLOSE; 
      CLR   ; 
      =     #QOPENING; 
      =     #QOPEN; 
      =     #QCLOSING; 
      =     #QCMD_OP; 
      L     W#16#0; 
      T     #QwState; 
      L     0.000000e+000; 
      T     #QMON_T; 
A7ee: CLR   ; 
      A     #QMON_ERR; 
      A     #c_bMonErrOpen; 
      JCN   A7ef; 
      CLR   ; 
      =     #QCLOSE; 
      =     #QOPENING; 
      SET   ; 
      =     #QOPEN; 
      CLR   ; 
      =     #QCLOSING; 
      SET   ; 
      =     #QCMD_OP; 
      L     W#16#2; 
      T     #QwState; 
      L     0.000000e+000; 
      T     #QMON_T; 
A7ef: CLR   ; 
      A     #c_bNONC; 
      NOT   ; 
      JCN   A7f0; 
      A     #QCMD_OP; 
      =     #q_bCmd; 
      JU    A7f1; 
A7f0: CLR   ; 
      A     #QCMD_OP; 
      NOT   ; 
      =     #q_bCmd; 
A7f1: CLR   ; 
      A     #i_bFBO; 
      =     #q_bFBO; 
      A     #i_bFBC; 
      =     #q_bFBC; 
      A     #QCLOSE; 
      =     DIX [AR2,P#54.0]; 
      A     #QOPENING; 
      =     DIX [AR2,P#54.1]; 
      A     #QOPEN; 
      =     DIX [AR2,P#54.2]; 
      A     #QCLOSING; 
      =     DIX [AR2,P#54.3]; 
      A     #q_bFBO; 
      =     DIX [AR2,P#54.4]; 
      A     #q_bFBC; 
      =     DIX [AR2,P#54.5]; 
      A     #c_bHasFBO; 
      =     DIX [AR2,P#54.6]; 
      A     #c_bHasFBC; 
      =     DIX [AR2,P#54.7]; 
      A     #QMON; 
      =     DIX [AR2,P#55.0]; 
      A     #QMON_ERR; 
      =     DIX [AR2,P#55.1]; 
      A     #c_bLockOpen; 
      =     DIX [AR2,P#55.2]; 
      A     #c_bMonErrOpen; 
      =     DIX [AR2,P#55.3]; 
      CLR   ; 
      =     DIX [AR2,P#55.4]; 
      =     DIX [AR2,P#55.5]; 
      A     #c_bNONC; 
      =     DIX [AR2,P#55.6]; 
      CLR   ; 
      =     DIX [AR2,P#55.7]; 
      A     #QMAN_AUT; 
      =     DIX [AR2,P#56.0]; 
      CLR   ; 
      =     DIX [AR2,P#56.1]; 
      =     DIX [AR2,P#56.2]; 
      =     DIX [AR2,P#56.3]; 
      =     DIX [AR2,P#56.4]; 
      =     DIX [AR2,P#56.5]; 
      =     DIX [AR2,P#56.6]; 
      =     DIX [AR2,P#56.7]; 
      A     #QERR; 
      =     DIX [AR2,P#57.0]; 
      CLR   ; 
      =     DIX [AR2,P#57.1]; 
      A     #QLOCK; 
      =     DIX [AR2,P#57.2]; 
      A     #LOCK; 
      =     DIX [AR2,P#57.3]; 
      CLR   ; 
      =     DIX [AR2,P#57.4]; 
      =     DIX [AR2,P#57.5]; 
      =     DIX [AR2,P#57.6]; 
      A     #LIOP_SEL; 
      =     DIX [AR2,P#57.7]; 
      L     DIB [AR2,P#57.0]; 
      T     DIB [AR2,P#18.0]; 
      L     DIB [AR2,P#56.0]; 
      T     DIB [AR2,P#19.0]; 
      L     DIB [AR2,P#55.0]; 
      T     DIB [AR2,P#20.0]; 
      L     DIB [AR2,P#54.0]; 
      T     DIB [AR2,P#21.0]; 
      SET   ; 
      =     #A8P.EN_R; 
      A     #QMON_ERR; 
      =     #A8P.SIG_1; 
      CLR   ; 
      =     #A8P.SIG_2; 
      =     #A8P.SIG_3; 
      =     #A8P.SIG_4; 
      A     #QLOCK; 
      =     #A8P.SIG_5; 
      CLR   ; 
      =     #A8P.SIG_6; 
      =     #A8P.SIG_7; 
      =     #A8P.SIG_8; 
      L     W#16#EEEE; 
      T     #A8P.ID; 
      L     #MSG1_EVID; 
      T     #A8P.EV_ID; 
      L     W#16#40; 
      T     #A8P.SEVERITY; 
      +AR2  P#58.0; 
      UC    SFB   35; 
	  L		8134; // todo: test
	  SLD	3;
	  +AR2;
      // +AR2  P#8134.0; 
      A     #A8P.DONE; 
      =     #MSG1_bDone; 
      A     #A8P.ERROR; 
      =     #MSG1_bError; 
      L     #A8P.STATUS; 
      T     #MSG1_wState; 
      L     #A8P.ACK_STATE; 
      T     #MSG1_wAck; 
      L     0; 
      T     #q_intAlarmIndex; 
      A     DIX [AR2,P#39.0]; 
      NOT   ; 
      =     L     26.2; 
      A     DIX [AR2,P#39.4]; 
      NOT   ; 
      O     L     26.2; 
      JCN   A7f2; 
      L     1; 
      T     #q_intAlarmIndex; 
      JU    A7f4; 
A7f2: CLR   ; 
      A     #QMON_ERR; 
      O     #QLOCK; 
      JCN   A7f4; 
      L     2; 
      T     #q_intAlarmIndex; 
A7f4: CLR   ; 
      A     #QOPENING; 
      =     #QOPENING_OLD; 
      A     #QCLOSING; 
      =     #QCLOSING_OLD; 
      L     DW#16#0; 
      T     #OP_dwCmd; 
      A     L     26.1; 
      SAVE  ; 
      BE    ; 
END_FUNCTION_BLOCK

(*$ALARM_SERVER <HEADERS STEP7_VERSION="262144" CODING="true"><LANGUAGE LCID="1031">German</LANGUAGE><STD_LANGUAGE>1031</STD_LANGUAGE><HEADER PARENT="RkIyMDg=" PARENT_SYM="Q01fVkFMVkVfNDAw"><VERSION>Q1BVX1dJREVfQUxBUk1OUg==</VERSION><STRUCTTYPE>1</STRUCTTYPE><ATTR_STATE>0</ATTR_STATE><PRODUCER>1</PRODUCER><ALARM NAME="TVNHMV9FVklE"><ATTR_STATE>0</ATTR_STATE><ALARMNR>0</ALARMNR><ALARMTYPE>YWxhcm1fOHA=</ALARMTYPE><DISPLAYGROUP>0</DISPLAYGROUP><SUBCOUNT>8</SUBCOUNT><RANGE>0</RANGE><PROTOCOL>0</PROTOCOL><SUBALARM ID="1"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="2"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="3"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="4"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="5"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="6"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="7"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="8"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM></ALARM></HEADER></HEADERS> *)

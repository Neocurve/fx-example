FUNCTION_BLOCK FB 102
TITLE =
{ S7_m_c := 'true'; S7_blockview := 'big'; S7_tasklist := 'OB100' }
AUTHOR : 
FAMILY : ACT
NAME : AIN
VERSION : 0.0


VAR_INPUT
  SAMPLE_T { S7_sampletime := 'true' }: REAL ;	//Sample time; Defined by OB during compiling
  i_bWireBreak { S7_dynamic := 'true'; S7_visible := 'false' }: BOOL ;	//1=Wire break from other block; Default=0
  i_bOverRun { S7_dynamic := 'true'; S7_visible := 'false' }: BOOL ;	//1=Short connect from other block; Default=0
  iMode { S7_dynamic := 'true' }: BOOL ;	//1=Signal from other block's float value; 0=Signal from AI channel; Default=0
  wVal { S7_dynamic := 'true' }: WORD ;	//AI channel signal; Default=0
  fVal { S7_dynamic := 'true' }: REAL ;	//FLoat value; Default=0
  fHR { S7_dynamic := 'true'; S7_m_c := 'true' }: REAL  := 1.000000e+002;	//Messurement high range; Default=100
  fLR { S7_dynamic := 'true'; S7_m_c := 'true' }: REAL ;	//Messurement high range; Default=0
  LIM_byEnable { S7_dynamic := 'true'; S7_visible := 'false' }: BYTE ;	//0No1AL2WL3ALWL4WH5ALWH6WLWH7ALWLWH8AH9ALAHaWLAHbALWLAHcWHAHdALWHAHeWLWHAHfALL
  LIM_bHysSet { S7_dynamic := 'true' }: BOOL ;	//1=Absolut; 0=Percental; Default=0 
  LIM_fHys { S7_dynamic := 'true' }: REAL ;	//Hysterese value for limits; Default=0
  LIM_fAH { S7_dynamic := 'true' }: REAL  := 1.000000e+002;	//High High limit value; Default=100
  AH_DT { S7_dynamic := 'true' }: REAL ;	//High High limit delay time; Default=0
  LIM_fWH { S7_dynamic := 'true' }: REAL  := 1.000000e+002;	//High limit value; Default=100
  WH_DT { S7_dynamic := 'true' }: REAL ;	//High limit delay time; Default=0
  LIM_fWL { S7_dynamic := 'true' }: REAL ;	//Low limit value; Default=0
  WL_DT { S7_dynamic := 'true' }: REAL ;	//Low limit delay time; Default=0
  LIM_fAL { S7_dynamic := 'true' }: REAL ;	//Low Low limit value; Default=0
  AL_DT { S7_dynamic := 'true' }: REAL ;	//Low Low limit delay time; Default=0
  c_fTc { S7_dynamic := 'true' }: REAL ;	//Filter time constance; Default=0 
  c_bValKEEP { S7_dynamic := 'true' }: BOOL  := TRUE;	//1=Keep the last value when loop error; Default=1
  c_fValErr { S7_dynamic := 'true' }: REAL ;	//Value when loop error; Default=0 
  MSG1_EVID { S7_visible := 'false'; S7_link := 'false'; S7_param := 'false'; S7_server := 'alarm_archiv'; S7_a_type := 'alarm_8p' }: DWORD ;	
END_VAR
VAR_OUTPUT
  QdwState { S7_dynamic := 'true'; S7_m_c := 'true'; S7_visible := 'false' }: DWORD ;	//Anolog input status for icon and faceplate; Default=0
  QwLimState { S7_dynamic := 'true'; S7_m_c := 'true'; S7_visible := 'false' }: WORD ;	//Limit status for faceplate; Default=0
  QfVal { S7_dynamic := 'true'; S7_m_c := 'true'; S7_archive := 'shortterm'; S7_unit := 'unit' }: REAL ;	//Measuring value; Default=0
  QfHR { S7_dynamic := 'true' }: REAL  := 1.000000e+002;	//Messurement high range; Default=100
  QfLR { S7_dynamic := 'true' }: REAL ;	//Messurement Low range; Default=0
  LIM_QfHys { S7_dynamic := 'true' }: REAL ;	//Hysterese value for limits; Default=0
  QWARN { S7_dynamic := 'true' }: BOOL ;	//1=Low or High limit warning active; Default=0
  QALARM { S7_dynamic := 'true' }: BOOL ;	//1=Low Low or High High limit alarming active; Default=0  
  QERR { S7_dynamic := 'true' }: BOOL ;	//1=Anolog input wire break or short circuit; Default=0
  QERR_WIRE { S7_dynamic := 'true' }: BOOL ;	//1=Anolog input wire break; Default=0
  QERR_OVERRUN { S7_dynamic := 'true' }: BOOL ;	//1=Anolog input short circuit; Default=0
  QERR_LOWRANGE { S7_dynamic := 'true' }: BOOL ;	//1=Value < low range; Default=0
  QERR_HIGHRANGE { S7_dynamic := 'true' }: BOOL ;	//1=Value > high range; Default=0
  LIM_QfAH { S7_dynamic := 'true' }: REAL  := 1.000000e+002;	//High High limit value; Default=100
  LIM_QfWH { S7_dynamic := 'true' }: REAL  := 1.000000e+002;	//High limit value; Default=100
  LIM_QfWL { S7_dynamic := 'true' }: REAL ;	//Low limit value; Default=0
  LIM_QfAL { S7_dynamic := 'true' }: REAL ;	//Low limit value; Default=0
  LIM_QbAH { S7_dynamic := 'true' }: BOOL ;	//1=High High limit alarming active; Default=0
  QAH_T { S7_dynamic := 'true' }: REAL ;	//Current High High alarming monitoring time; Default=0
  LIM_QbWH { S7_dynamic := 'true' }: BOOL ;	//1=High limit warning active; Default=0
  QWH_T { S7_dynamic := 'true' }: REAL ;	//Current High warning monitoring time; Default=0
  LIM_QbWL { S7_dynamic := 'true' }: BOOL ;	//1=Low limit warning active; Default=0 
  QWL_T { S7_dynamic := 'true' }: REAL ;	//Current Low warning monitoring time; Default=0 
  LIM_QbAL { S7_dynamic := 'true' }: BOOL ;	//1=Low Low limit alarming active; Default=0
  QAL_T { S7_dynamic := 'true' }: REAL ;	//Current Low Low alarming monitoring time; Default=0
  q_intAlarmIndex { S7_dynamic := 'true'; S7_m_c := 'true'; S7_visible := 'false' }: INT ;	//Alarm Index for WinCC icon display; Default=0
  MSG1_bDone { S7_visible := 'false' }: BOOL ;	//A8P
  MSG1_bError { S7_visible := 'false' }: BOOL ;	//A8P
  MSG1_wState { S7_visible := 'false' }: WORD ;	//A8P
  MSG1_wAck { S7_visible := 'false' }: WORD ;	//A8P
END_VAR
VAR
  QdwStatePLC : DWORD ;	//State word in PLC format
  QwLimStatePLC : WORD ;	//Limit State word in PLC format
  LIM_byActive : BYTE ;	//set limit alarms (1=active)
  A8P : SFB 35;	
  STRUCT_TS : STRUCT 	
   wFormat : WORD ;	//time format
   aDT : ARRAY  [1 .. 8 ] OF //array date and time
   DATE_AND_TIME ;	//array date and time
  END_STRUCT ;	
  QfValTmp : REAL ;	
END_VAR
BEGIN
NETWORK
TITLE =SCL network
//compiled by SCL compiler version:  SCLCOMP K05.03.07.00_01.02.00.01 release
      SET   ; 
      SAVE  ; 
      =     L      0.1; 
      A     #iMode; 
      NOT   ; 
      JCN   A7d0; 
      L     #wVal; 
      L     0; 
      >=I   ; 
      L     #wVal; 
      L     27648; 
      =     L      0.2; 
      <=I   ; 
      A     L      0.2; 
      JCN   A7d1; 
      CLR   ; 
      =     #QERR_HIGHRANGE; 
      =     #QERR_LOWRANGE; 
      =     #QERR_OVERRUN; 
      =     #QERR_WIRE; 
      L     #wVal; 
      AD    DW#16#FFFF; 
      DTR   ; 
      L     2.764800e+004; 
      /R    ; 
      L     #fHR; 
      TAK   ; 
      T     LD     2; 
      TAK   ; 
      L     #fLR; 
      -R    ; 
      L     LD     2; 
      *R    ; 
      L     #fLR; 
      +R    ; 
      T     #QfValTmp; 
      JU    A7d6; 
A7d1: L     #wVal; 
      L     27648; 
      >I    ; 
      L     #wVal; 
      L     32511; 
      =     L      0.2; 
      <=I   ; 
      A     L      0.2; 
      JCN   A7d3; 
      SET   ; 
      =     #QERR_HIGHRANGE; 
      CLR   ; 
      =     #QERR_LOWRANGE; 
      =     #QERR_OVERRUN; 
      =     #QERR_WIRE; 
      L     #fHR; 
      T     #QfValTmp; 
      JU    A7d6; 
A7d3: L     #wVal; 
      L     32511; 
      >I    ; 
      L     #wVal; 
      L     32767; 
      =     L      0.2; 
      <=I   ; 
      A     L      0.2; 
      JCN   A7d4; 
      SET   ; 
      =     #QERR_OVERRUN; 
      CLR   ; 
      =     #QERR_HIGHRANGE; 
      =     #QERR_LOWRANGE; 
      =     #QERR_WIRE; 
      JU    A7d6; 
A7d4: L     #wVal; 
      L     0; 
      <I    ; 
      L     #wVal; 
      L     -4864; 
      =     L      0.2; 
      >I    ; 
      A     L      0.2; 
      JCN   A7d5; 
      SET   ; 
      =     #QERR_LOWRANGE; 
      CLR   ; 
      =     #QERR_HIGHRANGE; 
      =     #QERR_OVERRUN; 
      =     #QERR_WIRE; 
      L     #fLR; 
      T     #QfValTmp; 
      JU    A7d6; 
A7d5: L     #wVal; 
      L     -4864; 
      <=I   ; 
      L     #wVal; 
      L     -32768; 
      =     L      0.2; 
      >=I   ; 
      A     L      0.2; 
      JCN   A7d6; 
      SET   ; 
      =     #QERR_WIRE; 
      CLR   ; 
      =     #QERR_HIGHRANGE; 
      =     #QERR_OVERRUN; 
      =     #QERR_LOWRANGE; 
A7d6: CLR   ; 
      A     #QERR_OVERRUN; 
      O     #QERR_WIRE; 
      JCN   A7d7; 
      SET   ; 
      =     #QERR; 
      A     #c_bValKEEP; 
      NOT   ; 
      JCN   A7dc; 
      L     #c_fValErr; 
      T     #QfVal; 
      JU    A7dc; 
A7d7: CLR   ; 
      =     #QERR; 
      L     #c_fTc; 
      L     0.000000e+000; 
      ==R   ; 
      JCN   A7da; 
      L     #QfValTmp; 
      T     #QfVal; 
      JU    A7db; 
A7da: L     #SAMPLE_T; 
      L     #c_fTc; 
      /R    ; 
      L     #QfValTmp; 
      TAK   ; 
      T     LD     2; 
      TAK   ; 
      L     #QfVal; 
      -R    ; 
      L     LD     2; 
      *R    ; 
      L     #QfVal; 
      +R    ; 
      T     #QfVal; 
A7db: JU    A7dc; 
A7d0: CLR   ; 
      A     #i_bWireBreak; 
      O     #i_bOverRun; 
      JCN   A7dd; 
      SET   ; 
      =     #QERR; 
      A     #i_bWireBreak; 
      JCN   A7de; 
      SET   ; 
      =     #QERR_WIRE; 
      JU    A7df; 
A7de: CLR   ; 
      =     #QERR_WIRE; 
A7df: CLR   ; 
      A     #i_bOverRun; 
      JCN   A7e0; 
      SET   ; 
      =     #QERR_OVERRUN; 
      JU    A7e1; 
A7e0: CLR   ; 
      =     #QERR_OVERRUN; 
A7e1: CLR   ; 
      A     #c_bValKEEP; 
      NOT   ; 
      JCN   A7dc; 
      L     #c_fValErr; 
      T     #QfVal; 
      JU    A7dc; 
A7dd: CLR   ; 
      =     #QERR; 
      =     #QERR_HIGHRANGE; 
      =     #QERR_LOWRANGE; 
      =     #QERR_OVERRUN; 
      =     #QERR_WIRE; 
      L     #c_fTc; 
      L     0.000000e+000; 
      ==R   ; 
      JCN   A7e4; 
      L     #fVal; 
      T     #QfVal; 
      JU    A7e5; 
A7e4: L     #SAMPLE_T; 
      L     #c_fTc; 
      /R    ; 
      L     #fVal; 
      TAK   ; 
      T     LD     2; 
      TAK   ; 
      L     #QfVal; 
      -R    ; 
      L     LD     2; 
      *R    ; 
      L     #QfVal; 
      +R    ; 
      T     #QfVal; 
A7e5: L     #QfVal; 
      T     #QfValTmp; 
A7dc: CLR   ; 
      A     #LIM_bHysSet; 
      JCN   A7e6; 
      L     #LIM_fHys; 
      T     #LIM_QfHys; 
      JU    A7e7; 
A7e6: L     #fHR; 
      L     #fLR; 
      -R    ; 
      L     #LIM_fHys; 
      *R    ; 
      L     1.000000e+002; 
      /R    ; 
      T     #LIM_QfHys; 
A7e7: CLR   ; 
      A     DIX [AR2,P#20.0]; 
      JCN   A7e8; 
      L     #LIM_QfAL; 
      L     #LIM_QfHys; 
      -R    ; 
      L     #QfVal; 
      TAK   ; 
      <=R   ; 
      JCN   A7e9; 
      SET   ; 
      =     DIX [AR2,P#150.0]; 
      JU    A7ea; 
A7e9: L     #LIM_QfAL; 
      L     #LIM_QfHys; 
      +R    ; 
      L     #QfVal; 
      TAK   ; 
      >R    ; 
      JCN   A7ec; 
      CLR   ; 
      =     DIX [AR2,P#150.0]; 
A7ea: JU    A7ec; 
A7e8: CLR   ; 
      =     DIX [AR2,P#150.0]; 
A7ec: CLR   ; 
      A     DIX [AR2,P#150.0]; 
      JCN   A7ed; 
      L     #QAL_T; 
      L     #SAMPLE_T; 
      +R    ; 
      T     #QAL_T; 
      L     #QAL_T; 
      L     #AL_DT; 
      >R    ; 
      JCN   A7ef; 
      SET   ; 
      =     #LIM_QbAL; 
      JU    A7ef; 
A7ed: L     0.000000e+000; 
      T     #QAL_T; 
      CLR   ; 
      =     #LIM_QbAL; 
A7ef: CLR   ; 
      A     DIX [AR2,P#20.1]; 
      JCN   A7f0; 
      L     #LIM_QfWL; 
      L     #LIM_QfHys; 
      -R    ; 
      L     #QfVal; 
      TAK   ; 
      <=R   ; 
      JCN   A7f1; 
      SET   ; 
      =     DIX [AR2,P#150.1]; 
      JU    A7f2; 
A7f1: L     #LIM_QfWL; 
      L     #LIM_QfHys; 
      +R    ; 
      L     #QfVal; 
      TAK   ; 
      >R    ; 
      JCN   A7f4; 
      CLR   ; 
      =     DIX [AR2,P#150.1]; 
A7f2: JU    A7f4; 
A7f0: CLR   ; 
      =     DIX [AR2,P#150.1]; 
A7f4: CLR   ; 
      A     DIX [AR2,P#150.1]; 
      JCN   A7f5; 
      L     #QWL_T; 
      L     #SAMPLE_T; 
      +R    ; 
      T     #QWL_T; 
      L     #QWL_T; 
      L     #WL_DT; 
      >R    ; 
      JCN   A7f7; 
      SET   ; 
      =     #LIM_QbWL; 
      JU    A7f7; 
A7f5: L     0.000000e+000; 
      T     #QWL_T; 
      CLR   ; 
      =     #LIM_QbWL; 
A7f7: CLR   ; 
      A     DIX [AR2,P#20.2]; 
      JCN   A7f8; 
      L     #LIM_QfWH; 
      L     #LIM_QfHys; 
      +R    ; 
      L     #QfVal; 
      TAK   ; 
      >=R   ; 
      JCN   A7f9; 
      SET   ; 
      =     DIX [AR2,P#150.2]; 
      JU    A7fa; 
A7f9: L     #LIM_QfWH; 
      L     #LIM_QfHys; 
      -R    ; 
      L     #QfVal; 
      TAK   ; 
      <R    ; 
      JCN   A7fc; 
      CLR   ; 
      =     DIX [AR2,P#150.2]; 
A7fa: JU    A7fc; 
A7f8: CLR   ; 
      =     DIX [AR2,P#150.2]; 
A7fc: CLR   ; 
      A     DIX [AR2,P#150.2]; 
      JCN   A7fd; 
      L     #QWH_T; 
      L     #SAMPLE_T; 
      +R    ; 
      T     #QWH_T; 
      L     #QWH_T; 
      L     #WH_DT; 
      >R    ; 
      JCN   A7ff; 
      SET   ; 
      =     #LIM_QbWH; 
      JU    A7ff; 
A7fd: L     0.000000e+000; 
      T     #QWH_T; 
      CLR   ; 
      =     #LIM_QbWH; 
A7ff: CLR   ; 
      A     DIX [AR2,P#20.3]; 
      JCN   A800; 
      L     #LIM_QfAH; 
      L     #LIM_QfHys; 
      +R    ; 
      L     #QfVal; 
      TAK   ; 
      >=R   ; 
      JCN   A801; 
      SET   ; 
      =     DIX [AR2,P#150.3]; 
      JU    A802; 
A801: L     #LIM_QfAH; 
      L     #LIM_QfHys; 
      -R    ; 
      L     #QfVal; 
      TAK   ; 
      <R    ; 
      JCN   A804; 
      CLR   ; 
      =     DIX [AR2,P#150.3]; 
A802: JU    A804; 
A800: CLR   ; 
      =     DIX [AR2,P#150.3]; 
A804: CLR   ; 
      A     DIX [AR2,P#150.3]; 
      JCN   A805; 
      L     #QAH_T; 
      L     #SAMPLE_T; 
      +R    ; 
      T     #QAH_T; 
      L     #QAH_T; 
      L     #AH_DT; 
      >R    ; 
      JCN   A807; 
      SET   ; 
      =     #LIM_QbAH; 
      JU    A807; 
A805: L     0.000000e+000; 
      T     #QAH_T; 
      CLR   ; 
      =     #LIM_QbAH; 
A807: L     #QAH_T; 
      L     9.999990e+005; 
      >=R   ; 
      JCN   A808; 
      T     #QAH_T; 
A808: L     #QWH_T; 
      L     9.999990e+005; 
      >=R   ; 
      JCN   A809; 
      T     #QWH_T; 
A809: L     #QWL_T; 
      L     9.999990e+005; 
      >=R   ; 
      JCN   A80a; 
      T     #QWL_T; 
A80a: L     #QAL_T; 
      L     9.999990e+005; 
      >=R   ; 
      JCN   A80b; 
      T     #QAL_T; 
A80b: CLR   ; 
      A     #LIM_QbAL; 
      O     #LIM_QbAH; 
      JCN   A80c; 
      SET   ; 
      =     #QALARM; 
      JU    A80d; 
A80c: CLR   ; 
      =     #QALARM; 
A80d: CLR   ; 
      A     #LIM_QbWL; 
      O     #LIM_QbWH; 
      JCN   A80e; 
      SET   ; 
      =     #QWARN; 
      JU    A80f; 
A80e: CLR   ; 
      =     #QWARN; 
A80f: L     #fHR; 
      T     #QfHR; 
      L     #fLR; 
      T     #QfLR; 
      L     #LIM_fAL; 
      T     #LIM_QfAL; 
      L     #LIM_fWL; 
      T     #LIM_QfWL; 
      L     #LIM_fWH; 
      T     #LIM_QfWH; 
      L     #LIM_fAH; 
      T     #LIM_QfAH; 
      L     #QfVal; 
      L     #QfHR; 
      >R    ; 
      JCN   A810; 
      L     #QfHR; 
      T     #QfVal; 
      JU    A812; 
A810: L     #QfVal; 
      L     #QfLR; 
      <R    ; 
      JCN   A812; 
      L     #QfLR; 
      T     #QfVal; 
A812: CLR   ; 
      A     #iMode; 
      =     DIX [AR2,P#144.0]; 
      A     #LIM_bHysSet; 
      =     DIX [AR2,P#144.1]; 
      CLR   ; 
      =     DIX [AR2,P#144.2]; 
      =     DIX [AR2,P#144.3]; 
      A     #LIM_QbAL; 
      =     DIX [AR2,P#144.4]; 
      A     #LIM_QbWL; 
      =     DIX [AR2,P#144.5]; 
      A     #LIM_QbWH; 
      =     DIX [AR2,P#144.6]; 
      A     #LIM_QbAH; 
      =     DIX [AR2,P#144.7]; 
      A     #QWARN; 
      =     DIX [AR2,P#145.0]; 
      A     #QALARM; 
      =     DIX [AR2,P#145.1]; 
      CLR   ; 
      =     DIX [AR2,P#145.2]; 
      =     DIX [AR2,P#145.3]; 
      A     #QERR_LOWRANGE; 
      =     DIX [AR2,P#145.4]; 
      A     #QERR_HIGHRANGE; 
      =     DIX [AR2,P#145.5]; 
      A     #QERR_OVERRUN; 
      =     DIX [AR2,P#145.6]; 
      A     #QERR_WIRE; 
      =     DIX [AR2,P#145.7]; 
      CLR   ; 
      =     DIX [AR2,P#146.0]; 
      =     DIX [AR2,P#146.1]; 
      =     DIX [AR2,P#146.2]; 
      =     DIX [AR2,P#146.3]; 
      =     DIX [AR2,P#146.4]; 
      =     DIX [AR2,P#146.5]; 
      =     DIX [AR2,P#146.6]; 
      =     DIX [AR2,P#146.7]; 
      A     #QERR; 
      =     DIX [AR2,P#147.0]; 
      CLR   ; 
      =     DIX [AR2,P#147.1]; 
      =     DIX [AR2,P#147.2]; 
      =     DIX [AR2,P#147.3]; 
      =     DIX [AR2,P#147.4]; 
      =     DIX [AR2,P#147.5]; 
      =     DIX [AR2,P#147.6]; 
      =     DIX [AR2,P#147.7]; 
      L     DIB [AR2,P#147.0]; 
      T     DIB [AR2,P#72.0]; 
      L     DIB [AR2,P#146.0]; 
      T     DIB [AR2,P#73.0]; 
      L     DIB [AR2,P#145.0]; 
      T     DIB [AR2,P#74.0]; 
      L     DIB [AR2,P#144.0]; 
      T     DIB [AR2,P#75.0]; 
      A     DIX [AR2,P#20.0]; 
      =     DIX [AR2,P#148.0]; 
      A     DIX [AR2,P#20.1]; 
      =     DIX [AR2,P#148.1]; 
      A     DIX [AR2,P#20.2]; 
      =     DIX [AR2,P#148.2]; 
      A     DIX [AR2,P#20.3]; 
      =     DIX [AR2,P#148.3]; 
      CLR   ; 
      =     DIX [AR2,P#148.4]; 
      =     DIX [AR2,P#148.5]; 
      =     DIX [AR2,P#148.6]; 
      =     DIX [AR2,P#148.7]; 
      =     DIX [AR2,P#149.0]; 
      =     DIX [AR2,P#149.1]; 
      =     DIX [AR2,P#149.2]; 
      =     DIX [AR2,P#149.3]; 
      =     DIX [AR2,P#149.4]; 
      =     DIX [AR2,P#149.5]; 
      =     DIX [AR2,P#149.6]; 
      =     DIX [AR2,P#149.7]; 
      L     DIB [AR2,P#149.0]; 
      T     DIB [AR2,P#76.0]; 
      L     DIB [AR2,P#148.0]; 
      T     DIB [AR2,P#77.0]; 
      SET   ; 
      =     #A8P.EN_R; 
      A     #LIM_QbAH; 
      =     #A8P.SIG_1; 
      A     #LIM_QbWH; 
      =     #A8P.SIG_2; 
      A     #LIM_QbWL; 
      =     #A8P.SIG_3; 
      A     #LIM_QbAL; 
      =     #A8P.SIG_4; 
      A     #QERR; 
      =     #A8P.SIG_5; 
      CLR   ; 
      =     #A8P.SIG_6; 
      =     #A8P.SIG_7; 
      =     #A8P.SIG_8; 
      L     W#16#EEEE; 
      T     #A8P.ID; 
      L     #MSG1_EVID; 
      T     #A8P.EV_ID; 
      L     W#16#40; 
      T     #A8P.SEVERITY; 
      +AR2  P#152.0; 
      UC    SFB   35; 
	  L 	8040; //todo: test
	  SLD	3;
	  +AR2;
      //+AR2  P#8040.0; 
      A     #A8P.DONE; 
      =     #MSG1_bDone; 
      A     #A8P.ERROR; 
      =     #MSG1_bError; 
      L     #A8P.STATUS; 
      T     #MSG1_wState; 
      L     #A8P.ACK_STATE; 
      T     #MSG1_wAck; 
      L     0; 
      T     #q_intAlarmIndex; 
      A     DIX [AR2,P#143.1]; 
      NOT   ; 
      =     L      0.2; 
      A     DIX [AR2,P#143.2]; 
      NOT   ; 
      O     L      0.2; 
      JCN   A813; 
      L     1; 
      T     #q_intAlarmIndex; 
      JU    A815; 
A813: CLR   ; 
      A     #LIM_QbWH; 
      O     #LIM_QbWL; 
      JCN   A815; 
      L     2; 
      T     #q_intAlarmIndex; 
A815: CLR   ; 
      A     DIX [AR2,P#143.0]; 
      NOT   ; 
      =     L      0.2; 
      A     DIX [AR2,P#143.3]; 
      NOT   ; 
      O     L      0.2; 
      JCN   A816; 
      L     3; 
      T     #q_intAlarmIndex; 
      JU    A818; 
A816: CLR   ; 
      A     #LIM_QbAH; 
      O     #LIM_QbAL; 
      JCN   A818; 
      L     4; 
      T     #q_intAlarmIndex; 
A818: CLR   ; 
      A     DIX [AR2,P#143.4]; 
      NOT   ; 
      JCN   A819; 
      L     5; 
      T     #q_intAlarmIndex; 
      JU    A81b; 
A819: CLR   ; 
      A     #QERR; 
      JCN   A81b; 
      L     6; 
      T     #q_intAlarmIndex; 
A81b: CLR   ; 
      A     L      0.1; 
      SAVE  ; 
      BE    ; 
END_FUNCTION_BLOCK

(*$ALARM_SERVER <HEADERS STEP7_VERSION="262144" CODING="true"><LANGUAGE LCID="1031">German</LANGUAGE><STD_LANGUAGE>1031</STD_LANGUAGE><HEADER PARENT="RkIxMDI=" PARENT_SYM="Q01fQUlOXzQwMA=="><VERSION>Q1BVX1dJREVfQUxBUk1OUg==</VERSION><STRUCTTYPE>1</STRUCTTYPE><ATTR_STATE>0</ATTR_STATE><PRODUCER>1</PRODUCER><ALARM NAME="TVNHMV9FVklE"><ATTR_STATE>0</ATTR_STATE><ALARMNR>0</ALARMNR><ALARMTYPE>YWxhcm1fOHA=</ALARMTYPE><DISPLAYGROUP>0</DISPLAYGROUP><SUBCOUNT>8</SUBCOUNT><RANGE>0</RANGE><PROTOCOL>0</PROTOCOL><SUBALARM ID="1"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="2"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="3"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="4"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="5"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="6"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="7"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM><SUBALARM ID="8"><ALARM_CLASS>1</ALARM_CLASS><ALARM_ART>1</ALARM_ART><QUITGROUP>0</QUITGROUP><PRIORITY>1</PRIORITY><QUIT>1</QUIT><TRIGGER_ACTION>0</TRIGGER_ACTION><ATTR_STATE>0</ATTR_STATE></SUBALARM></ALARM></HEADER></HEADERS> *)
